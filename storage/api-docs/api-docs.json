{
    "openapi": "3.0.0",
    "info": {
        "title": "ACDM v2.0 OpenApi",
        "description": "ACDM v2.0 OpenApi",
        "contact": {
            "email": "satrya@freshcms.net"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "https://api.acdm-2.0.local:444/api",
            "description": "ACDM v2.0 OpenApi host server"
        }
    ],
    "paths": {
        "/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "description": "Login",
                "operationId": "actionLogin",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Loged in"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/refresh-token": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "description": "Refresh token",
                "operationId": "actionRefreshToken",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "token": {
                                        "description": "Token property",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Token refreshed"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/check-password": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "description": "Check password",
                "operationId": "actionCheckPassword",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "password": {
                                        "description": "Password property",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Check password"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "description": "Logout",
                "operationId": "actionLogout",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LogoutRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Loged out"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/register/{group}": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "description": "Register",
                "operationId": "actionRegister",
                "parameters": [
                    {
                        "name": "group",
                        "in": "path",
                        "description": "Group parameter",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "SYSTEM",
                                "DEVELOPER"
                            ]
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RegisterUserRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User registered"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/departures/list-search": {
            "post": {
                "tags": [
                    "Departure"
                ],
                "description": "Departures list search",
                "operationId": "actionDeparturesListSearch",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/timezone"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "properties": {
                                            "filter_by": {
                                                "description": "Filter by property",
                                                "type": "string",
                                                "example": "sobt"
                                            },
                                            "start_date": {
                                                "description": "Start date property",
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "YYYY-MM-DD HH:MM:SS"
                                            },
                                            "end_date": {
                                                "description": "End date property",
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "YYYY-MM-DD HH:MM:SS"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "$ref": "#/components/schemas/ListSearchParameter"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/GenericListSearchJsonResponse"
                                        },
                                        {
                                            "properties": {
                                                "rows": {
                                                    "description": "rows property",
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/DepartureResponse"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/departures/page-search": {
            "post": {
                "tags": [
                    "Departure"
                ],
                "description": "Departures page search",
                "operationId": "actionDeparturesPageSearch",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/timezone"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "properties": {
                                            "filter_by": {
                                                "description": "Filter by property",
                                                "type": "string",
                                                "example": "sobt"
                                            },
                                            "start_date": {
                                                "description": "Start date property",
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "YYYY-MM-DD HH:MM:SS"
                                            },
                                            "end_date": {
                                                "description": "End date property",
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "YYYY-MM-DD HH:MM:SS"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "$ref": "#/components/schemas/PageSearchParameter"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/GenericPageSearchJsonResponse"
                                        },
                                        {
                                            "properties": {
                                                "rows": {
                                                    "description": "rows property",
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/DepartureResponse"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/history/departures/list-search": {
            "post": {
                "tags": [
                    "Departure"
                ],
                "description": "History departures list search",
                "operationId": "actionHistoryDeparturesListSearch",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/timezone"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "properties": {
                                            "filter_by": {
                                                "description": "Filter by property",
                                                "type": "string",
                                                "example": "sobt"
                                            },
                                            "start_date": {
                                                "description": "Start date property",
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "YYYY-MM-DD HH:MM:SS"
                                            },
                                            "end_date": {
                                                "description": "End date property",
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "YYYY-MM-DD HH:MM:SS"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "$ref": "#/components/schemas/ListSearchParameter"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/GenericListSearchJsonResponse"
                                        },
                                        {
                                            "properties": {
                                                "rows": {
                                                    "description": "rows property",
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/DepartureHistoryResponse"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/history/departures/page-search": {
            "post": {
                "tags": [
                    "Departure"
                ],
                "description": "History departures page search",
                "operationId": "actionHistoryDeparturesPageSearch",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/timezone"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "properties": {
                                            "filter_by": {
                                                "description": "Filter by property",
                                                "type": "string",
                                                "example": "sobt"
                                            },
                                            "start_date": {
                                                "description": "Start date property",
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "YYYY-MM-DD HH:MM:SS"
                                            },
                                            "end_date": {
                                                "description": "End date property",
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "YYYY-MM-DD HH:MM:SS"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "$ref": "#/components/schemas/PageSearchParameter"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/GenericPageSearchJsonResponse"
                                        },
                                        {
                                            "properties": {
                                                "rows": {
                                                    "description": "rows property",
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/DepartureHistoryResponse"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/departures/ids": {
            "post": {
                "tags": [
                    "Departure"
                ],
                "description": "Departures by ids",
                "operationId": "actionDeparturesByIds",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/timezone"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ids": {
                                        "description": "Ids property",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "format": "int64",
                                            "example": 1
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/DepartureResponse"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/departures/aodb/ids": {
            "post": {
                "tags": [
                    "Departure"
                ],
                "description": "Departures by aodb ids",
                "operationId": "actionDeparturesByAodbIds",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/timezone"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "aodb_ids": {
                                        "description": "Aodb ids property",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "format": "int64",
                                            "example": 1
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/DepartureResponse"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/departures/tobt-updated": {
            "post": {
                "tags": [
                    "Departure"
                ],
                "description": "Departures tobt updated",
                "operationId": "actionDeparturesTobtUpdated",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/timezone"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "start_date": {
                                        "description": "Start date property",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "YYYY-MM-DD HH:MM:SS"
                                    },
                                    "end_date": {
                                        "description": "End date property",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "YYYY-MM-DD HH:MM:SS"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DepartureTobtUpdatedResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/departure": {
            "post": {
                "tags": [
                    "Departure"
                ],
                "description": "Create departure",
                "operationId": "actionCreateDeparture",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/timezone"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateDepartureRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Departure created"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/departures": {
            "put": {
                "tags": [
                    "Departure"
                ],
                "description": "Update departures by id",
                "operationId": "actionUpdateDeparturesById",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/timezone"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "departures"
                                ],
                                "properties": {
                                    "departures": {
                                        "description": "Departures property",
                                        "type": "array",
                                        "items": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/components/schemas/DepartureIdRequest"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/UpdateDepartureRequest"
                                                }
                                            ]
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Departures updated"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            },
            "post": {
                "tags": [
                    "Departure"
                ],
                "description": "Create departures",
                "operationId": "actionCreateDepartures",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/timezone"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "departures"
                                ],
                                "properties": {
                                    "departures": {
                                        "description": "Departures property",
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/CreateDepartureRequest"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Departures created"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/departure/{id}": {
            "get": {
                "tags": [
                    "Departure"
                ],
                "description": "Show departure",
                "operationId": "actionShowDeparture",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {}
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "Departure"
                ],
                "description": "Update departure by id",
                "operationId": "actionUpdateDepartureById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/timezone"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateDepartureRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Departure updated"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/departure/aodb/{id}": {
            "get": {
                "tags": [
                    "Departure"
                ],
                "description": "Show departure by aodb id",
                "operationId": "actionShowDepartureByAodbId",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {}
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "Departure"
                ],
                "description": "Update departure by aodb id",
                "operationId": "actionUpdateDepartureByAodbId",
                "parameters": [
                    {
                        "name": "aodbId",
                        "in": "path",
                        "description": "Aodb id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/timezone"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateDepartureRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Departure updated"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/departures/aodb": {
            "put": {
                "tags": [
                    "Departure"
                ],
                "description": "Update departures by aodb id",
                "operationId": "actionUpdateDeparturesByAodbId",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/timezone"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "departures"
                                ],
                                "properties": {
                                    "departures": {
                                        "description": "Departures property",
                                        "type": "array",
                                        "items": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/components/schemas/DepartureAodbIdRequest"
                                                },
                                                {
                                                    "$ref": "#/components/schemas/UpdateDepartureRequest"
                                                }
                                            ]
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Departures updated"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/flight-information": {
            "post": {
                "tags": [
                    "Flight Information"
                ],
                "description": "Create flight information",
                "operationId": "actionCreateFlightInformation",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateFlightInformationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FlightInformationEloquent"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/flight-information/{departureId}/latest": {
            "get": {
                "tags": [
                    "Flight Information"
                ],
                "description": "Get flight informations",
                "operationId": "actionGetLatestFlightInformation",
                "parameters": [
                    {
                        "name": "departureId",
                        "in": "path",
                        "description": "Departure id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FlightInformationEloquent"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/element/{departureId}/acgts": {
            "get": {
                "tags": [
                    "Element",
                    "ACGT"
                ],
                "description": "Get acgts",
                "operationId": "actionGetAcgts",
                "parameters": [
                    {
                        "name": "departureId",
                        "in": "path",
                        "description": "Departure id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "$ref": "#/components/parameters/timezone"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AcgtEloquent"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/element/acgt": {
            "post": {
                "tags": [
                    "Element",
                    "ACGT"
                ],
                "description": "Create acgt",
                "operationId": "actionCreateAcgt",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/timezone"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "properties": {
                                            "departure_id": {
                                                "description": "Departure id property",
                                                "type": "integer",
                                                "format": "int64"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "$ref": "#/components/schemas/AcgtCreateRequest"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AcgtEloquent"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/element/{departureId}/aczts": {
            "get": {
                "tags": [
                    "Element",
                    "ACZT"
                ],
                "description": "Get aczts",
                "operationId": "actionGetAczts",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/timezone"
                    },
                    {
                        "name": "departureId",
                        "in": "path",
                        "description": "Departure id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AcztEloquent"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/element/aczt": {
            "post": {
                "tags": [
                    "Element",
                    "ACZT"
                ],
                "description": "Create aczt",
                "operationId": "actionCreateAczt",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/timezone"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "properties": {
                                            "departure_id": {
                                                "description": "Departure id property",
                                                "type": "integer",
                                                "format": "int64"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "$ref": "#/components/schemas/AcztCreateRequest"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AcztEloquent"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/element/{departureId}/adits": {
            "get": {
                "tags": [
                    "Element",
                    "ADIT"
                ],
                "description": "Get adits",
                "operationId": "actionGetAdits",
                "parameters": [
                    {
                        "name": "departureId",
                        "in": "path",
                        "description": "Departure id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "$ref": "#/components/parameters/timezone"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AditEloquent"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/element/adit": {
            "post": {
                "tags": [
                    "Element",
                    "ADIT"
                ],
                "description": "Create adit",
                "operationId": "actionCreateAdit",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/timezone"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "properties": {
                                            "departure_id": {
                                                "description": "Departure id property",
                                                "type": "integer",
                                                "format": "int64"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "$ref": "#/components/schemas/AditCreateRequest"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AditEloquent"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/element/{departureId}/aegts": {
            "get": {
                "tags": [
                    "Element",
                    "AEGT"
                ],
                "description": "Get aegts",
                "operationId": "actionGetAegts",
                "parameters": [
                    {
                        "name": "departureId",
                        "in": "path",
                        "description": "Departure id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "$ref": "#/components/parameters/timezone"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AegtEloquent"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/element/aegt": {
            "post": {
                "tags": [
                    "Element",
                    "AEGT"
                ],
                "description": "Create aegt",
                "operationId": "actionCreateAegt",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/timezone"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "properties": {
                                            "departure_id": {
                                                "description": "Departure id property",
                                                "type": "integer",
                                                "format": "int64"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "$ref": "#/components/schemas/AegtCreateRequest"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AegtEloquent"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/element/{departureId}/aezts": {
            "get": {
                "tags": [
                    "Element",
                    "AEZT"
                ],
                "description": "Get aezts",
                "operationId": "actionGetAezts",
                "parameters": [
                    {
                        "name": "departureId",
                        "in": "path",
                        "description": "Departure id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "$ref": "#/components/parameters/timezone"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AeztEloquent"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/element/aezt": {
            "post": {
                "tags": [
                    "Element",
                    "AEZT"
                ],
                "description": "Create aezt",
                "operationId": "actionCreateAezt",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/timezone"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "properties": {
                                            "departure_id": {
                                                "description": "Departure id property",
                                                "type": "integer",
                                                "format": "int64"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "$ref": "#/components/schemas/AeztCreateRequest"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AeztEloquent"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/element/{departureId}/aghts": {
            "get": {
                "tags": [
                    "Element",
                    "AGHT"
                ],
                "description": "Get aghts",
                "operationId": "actionGetAghts",
                "parameters": [
                    {
                        "name": "departureId",
                        "in": "path",
                        "description": "Departure id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "$ref": "#/components/parameters/timezone"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AghtEloquent"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/element/aght": {
            "post": {
                "tags": [
                    "Element",
                    "AGHT"
                ],
                "description": "Create aght",
                "operationId": "actionCreateAght",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/timezone"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "properties": {
                                            "departure_id": {
                                                "description": "Departure id property",
                                                "type": "integer",
                                                "format": "int64"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "$ref": "#/components/schemas/AghtCreateRequest"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AghtEloquent"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/element/{departureId}/aobts": {
            "get": {
                "tags": [
                    "Element",
                    "AOBT"
                ],
                "description": "Get aobts",
                "operationId": "actionGetAobts",
                "parameters": [
                    {
                        "name": "departureId",
                        "in": "path",
                        "description": "Departure id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "$ref": "#/components/parameters/timezone"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AobtEloquent"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/element/aobt": {
            "post": {
                "tags": [
                    "Element",
                    "AOBT"
                ],
                "description": "Create aobt",
                "operationId": "actionCreateAobt",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/timezone"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "properties": {
                                            "departure_id": {
                                                "description": "Departure id property",
                                                "type": "integer",
                                                "format": "int64"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "$ref": "#/components/schemas/AobtCreateRequest"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AobtEloquent"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/element/{departureId}/ardts": {
            "get": {
                "tags": [
                    "Element",
                    "ARDT"
                ],
                "description": "Get ardts",
                "operationId": "actionGetArdts",
                "parameters": [
                    {
                        "name": "departureId",
                        "in": "path",
                        "description": "Departure id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "$ref": "#/components/parameters/timezone"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ArdtEloquent"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/element/ardt": {
            "post": {
                "tags": [
                    "Element",
                    "ARDT"
                ],
                "description": "Create ardt",
                "operationId": "actionCreateArdt",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/timezone"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "properties": {
                                            "departure_id": {
                                                "description": "Departure id property",
                                                "type": "integer",
                                                "format": "int64"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "$ref": "#/components/schemas/ArdtCreateRequest"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ArdtEloquent"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/element/{departureId}/arzts": {
            "get": {
                "tags": [
                    "Element",
                    "ARZT"
                ],
                "description": "Get arzts",
                "operationId": "actionGetArzts",
                "parameters": [
                    {
                        "name": "departureId",
                        "in": "path",
                        "description": "Departure id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "$ref": "#/components/parameters/timezone"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ArztEloquent"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/element/arzt": {
            "post": {
                "tags": [
                    "Element",
                    "ARZT"
                ],
                "description": "Create arzt",
                "operationId": "actionCreateArzt",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/timezone"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "properties": {
                                            "departure_id": {
                                                "description": "Departure id property",
                                                "type": "integer",
                                                "format": "int64"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "$ref": "#/components/schemas/ArztCreateRequest"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ArztEloquent"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/element/{departureId}/asbts": {
            "get": {
                "tags": [
                    "Element",
                    "ASBT"
                ],
                "description": "Get asbts",
                "operationId": "actionGetAsbts",
                "parameters": [
                    {
                        "name": "departureId",
                        "in": "path",
                        "description": "Departure id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "$ref": "#/components/parameters/timezone"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsbtEloquent"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/element/asbt": {
            "post": {
                "tags": [
                    "Element",
                    "ASBT"
                ],
                "description": "Create asbt",
                "operationId": "actionCreateAsbt",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/timezone"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "properties": {
                                            "departure_id": {
                                                "description": "Departure id property",
                                                "type": "integer",
                                                "format": "int64"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "$ref": "#/components/schemas/AsbtCreateRequest"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsbtEloquent"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/element/{departureId}/asrts": {
            "get": {
                "tags": [
                    "Element",
                    "ASRT"
                ],
                "description": "Get asrts",
                "operationId": "actionGetAsrts",
                "parameters": [
                    {
                        "name": "departureId",
                        "in": "path",
                        "description": "Departure id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "$ref": "#/components/parameters/timezone"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsrtEloquent"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/element/asrt": {
            "post": {
                "tags": [
                    "Element",
                    "ASRT"
                ],
                "description": "Create asrt",
                "operationId": "actionCreateAsrt",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/timezone"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "properties": {
                                            "departure_id": {
                                                "description": "Departure id property",
                                                "type": "integer",
                                                "format": "int64"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "$ref": "#/components/schemas/AsrtCreateRequest"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsrtEloquent"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/element/{departureId}/atets": {
            "get": {
                "tags": [
                    "Element",
                    "ATET"
                ],
                "description": "Get atets",
                "operationId": "actionGetAtets",
                "parameters": [
                    {
                        "name": "departureId",
                        "in": "path",
                        "description": "Departure id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "$ref": "#/components/parameters/timezone"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AtetEloquent"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/element/atet": {
            "post": {
                "tags": [
                    "Element",
                    "ATET"
                ],
                "description": "Create atet",
                "operationId": "actionCreateAtet",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/timezone"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "properties": {
                                            "departure_id": {
                                                "description": "Departure id property",
                                                "type": "integer",
                                                "format": "int64"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "$ref": "#/components/schemas/AtetCreateRequest"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AtetEloquent"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/element/{departureId}/atots": {
            "get": {
                "tags": [
                    "Element",
                    "ATOT"
                ],
                "description": "Get atots",
                "operationId": "actionGetAtots",
                "parameters": [
                    {
                        "name": "departureId",
                        "in": "path",
                        "description": "Departure id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "$ref": "#/components/parameters/timezone"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AtotEloquent"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/element/atot": {
            "post": {
                "tags": [
                    "Element",
                    "ATOT"
                ],
                "description": "Create atot",
                "operationId": "actionCreateAtot",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/timezone"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "properties": {
                                            "departure_id": {
                                                "description": "Departure id property",
                                                "type": "integer",
                                                "format": "int64"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "$ref": "#/components/schemas/AtotCreateRequest"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AtotEloquent"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/element/{departureId}/atsts": {
            "get": {
                "tags": [
                    "Element",
                    "ATST"
                ],
                "description": "Get atsts",
                "operationId": "actionGetAtsts",
                "parameters": [
                    {
                        "name": "departureId",
                        "in": "path",
                        "description": "Departure id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "$ref": "#/components/parameters/timezone"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AtstEloquent"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/element/atst": {
            "post": {
                "tags": [
                    "Element",
                    "ATST"
                ],
                "description": "Create atst",
                "operationId": "actionCreateAtst",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/timezone"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "properties": {
                                            "departure_id": {
                                                "description": "Departure id property",
                                                "type": "integer",
                                                "format": "int64"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "$ref": "#/components/schemas/AtstCreateRequest"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AtstEloquent"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/element/{departureId}/attts": {
            "get": {
                "tags": [
                    "Element",
                    "ATTT"
                ],
                "description": "Get attts",
                "operationId": "actionGetAttts",
                "parameters": [
                    {
                        "name": "departureId",
                        "in": "path",
                        "description": "Departure id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "$ref": "#/components/parameters/timezone"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AtttEloquent"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/element/attt": {
            "post": {
                "tags": [
                    "Element",
                    "ATTT"
                ],
                "description": "Create attt",
                "operationId": "actionCreateAttt",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/timezone"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "properties": {
                                            "departure_id": {
                                                "description": "Departure id property",
                                                "type": "integer",
                                                "format": "int64"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "$ref": "#/components/schemas/AtttCreateRequest"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AtttEloquent"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/element/{departureId}/axots": {
            "get": {
                "tags": [
                    "Element",
                    "AXOT"
                ],
                "description": "Get axots",
                "operationId": "actionGetAxots",
                "parameters": [
                    {
                        "name": "departureId",
                        "in": "path",
                        "description": "Departure id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "$ref": "#/components/parameters/timezone"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AxotEloquent"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/element/axot": {
            "post": {
                "tags": [
                    "Element",
                    "AXOT"
                ],
                "description": "Create axot",
                "operationId": "actionCreateAxot",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/timezone"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "properties": {
                                            "departure_id": {
                                                "description": "Departure id property",
                                                "type": "integer",
                                                "format": "int64"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "$ref": "#/components/schemas/AxotCreateRequest"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AxotEloquent"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/element/{departureId}/azats": {
            "get": {
                "tags": [
                    "Element",
                    "AZAT"
                ],
                "description": "Get azats",
                "operationId": "actionGetAzats",
                "parameters": [
                    {
                        "name": "departureId",
                        "in": "path",
                        "description": "Departure id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "$ref": "#/components/parameters/timezone"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AzatEloquent"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/element/azat": {
            "post": {
                "tags": [
                    "Element",
                    "AZAT"
                ],
                "description": "Create azat",
                "operationId": "actionCreateAzat",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/timezone"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "properties": {
                                            "departure_id": {
                                                "description": "Departure id property",
                                                "type": "integer",
                                                "format": "int64"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "$ref": "#/components/schemas/AzatCreateRequest"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AzatEloquent"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/element/{departureId}/ctots": {
            "get": {
                "tags": [
                    "Element",
                    "CTOT"
                ],
                "description": "Get ctots",
                "operationId": "actionGetCtots",
                "parameters": [
                    {
                        "name": "departureId",
                        "in": "path",
                        "description": "Departure id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "$ref": "#/components/parameters/timezone"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CtotEloquent"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/element/ctot": {
            "post": {
                "tags": [
                    "Element",
                    "CTOT"
                ],
                "description": "Create ctot",
                "operationId": "actionCreateCtot",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/timezone"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "properties": {
                                            "departure_id": {
                                                "description": "Departure id property",
                                                "type": "integer",
                                                "format": "int64"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "$ref": "#/components/schemas/CtotCreateRequest"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CtotEloquent"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/element/{departureId}/eczts": {
            "get": {
                "tags": [
                    "Element",
                    "ECZT"
                ],
                "description": "Get eczts",
                "operationId": "actionGetEczts",
                "parameters": [
                    {
                        "name": "departureId",
                        "in": "path",
                        "description": "Departure id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "$ref": "#/components/parameters/timezone"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EcztEloquent"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/element/eczt": {
            "post": {
                "tags": [
                    "Element",
                    "ECZT"
                ],
                "description": "Create eczt",
                "operationId": "actionCreateEczt",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/timezone"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "properties": {
                                            "departure_id": {
                                                "description": "Departure id property",
                                                "type": "integer",
                                                "format": "int64"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "$ref": "#/components/schemas/EcztCreateRequest"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EcztEloquent"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/element/{departureId}/edits": {
            "get": {
                "tags": [
                    "Element",
                    "EDIT"
                ],
                "description": "Get edits",
                "operationId": "actionGetEdits",
                "parameters": [
                    {
                        "name": "departureId",
                        "in": "path",
                        "description": "Departure id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "$ref": "#/components/parameters/timezone"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EditEloquent"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/element/edit": {
            "post": {
                "tags": [
                    "Element",
                    "EDIT"
                ],
                "description": "Create edit",
                "operationId": "actionCreateEdit",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/timezone"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "properties": {
                                            "departure_id": {
                                                "description": "Departure id property",
                                                "type": "integer",
                                                "format": "int64"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "$ref": "#/components/schemas/EditCreateRequest"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EditEloquent"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/element/{departureId}/eezts": {
            "get": {
                "tags": [
                    "Element",
                    "EEZT"
                ],
                "description": "Get eezts",
                "operationId": "actionGetEezts",
                "parameters": [
                    {
                        "name": "departureId",
                        "in": "path",
                        "description": "Departure id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "$ref": "#/components/parameters/timezone"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EeztEloquent"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/element/eezt": {
            "post": {
                "tags": [
                    "Element",
                    "EEZT"
                ],
                "description": "Create eezt",
                "operationId": "actionCreateEezt",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/timezone"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "properties": {
                                            "departure_id": {
                                                "description": "Departure id property",
                                                "type": "integer",
                                                "format": "int64"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "$ref": "#/components/schemas/EeztCreateRequest"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EeztEloquent"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/element/{departureId}/eobt": {
            "get": {
                "tags": [
                    "Element",
                    "EOBT"
                ],
                "description": "Get eobts",
                "operationId": "actionGetEobts",
                "parameters": [
                    {
                        "name": "departureId",
                        "in": "path",
                        "description": "Departure id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "$ref": "#/components/parameters/timezone"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EobtEloquent"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/element/eobt": {
            "post": {
                "tags": [
                    "Element",
                    "EOBT"
                ],
                "description": "Create eobt",
                "operationId": "actionCreateEobt",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/timezone"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "properties": {
                                            "departure_id": {
                                                "description": "Departure id property",
                                                "type": "integer",
                                                "format": "int64"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "$ref": "#/components/schemas/EobtCreateRequest"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EobtEloquent"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/element/{departureId}/erzt": {
            "get": {
                "tags": [
                    "Element",
                    "ERZT"
                ],
                "description": "Get erzts",
                "operationId": "actionGetErzts",
                "parameters": [
                    {
                        "name": "departureId",
                        "in": "path",
                        "description": "Departure id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "$ref": "#/components/parameters/timezone"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErztEloquent"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/element/erzt": {
            "post": {
                "tags": [
                    "Element",
                    "ERZT"
                ],
                "description": "Create erzt",
                "operationId": "actionCreateErzt",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/timezone"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "properties": {
                                            "departure_id": {
                                                "description": "Departure id property",
                                                "type": "integer",
                                                "format": "int64"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "$ref": "#/components/schemas/ErztCreateRequest"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErztEloquent"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/element/{departureId}/etots": {
            "get": {
                "tags": [
                    "Element",
                    "ETOT"
                ],
                "description": "Get etots",
                "operationId": "actionGetEtots",
                "parameters": [
                    {
                        "name": "departureId",
                        "in": "path",
                        "description": "Departure id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "$ref": "#/components/parameters/timezone"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EtotEloquent"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/element/etot": {
            "post": {
                "tags": [
                    "Element",
                    "ETOT"
                ],
                "description": "Create etot",
                "operationId": "actionCreateEtot",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/timezone"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "properties": {
                                            "departure_id": {
                                                "description": "Departure id property",
                                                "type": "integer",
                                                "format": "int64"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "$ref": "#/components/schemas/EtotCreateRequest"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EtotEloquent"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/element/{departureId}/exots": {
            "get": {
                "tags": [
                    "Element",
                    "EXOT"
                ],
                "description": "Get exots",
                "operationId": "actionGetExots",
                "parameters": [
                    {
                        "name": "departureId",
                        "in": "path",
                        "description": "Departure id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "$ref": "#/components/parameters/timezone"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExotEloquent"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/element/exot": {
            "post": {
                "tags": [
                    "Element",
                    "EXOT"
                ],
                "description": "Create exot",
                "operationId": "actionCreateExot",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/timezone"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "properties": {
                                            "departure_id": {
                                                "description": "Departure id property",
                                                "type": "integer",
                                                "format": "int64"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "$ref": "#/components/schemas/ExotCreateRequest"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExotEloquent"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/element/{departureId}/sobts": {
            "get": {
                "tags": [
                    "Element",
                    "SOBT"
                ],
                "description": "Get sobts",
                "operationId": "actionGetSobts",
                "parameters": [
                    {
                        "name": "departureId",
                        "in": "path",
                        "description": "Departure id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "$ref": "#/components/parameters/timezone"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SobtEloquent"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/element/sobt": {
            "post": {
                "tags": [
                    "Element",
                    "SOBT"
                ],
                "description": "Create sobt",
                "operationId": "actionCreateSobt",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/timezone"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "properties": {
                                            "departure_id": {
                                                "description": "Departure id property",
                                                "type": "integer",
                                                "format": "int64"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "$ref": "#/components/schemas/SobtCreateRequest"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SobtEloquent"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/element/{departureId}/stets": {
            "get": {
                "tags": [
                    "Element",
                    "STET"
                ],
                "description": "Get stets",
                "operationId": "actionGetStets",
                "parameters": [
                    {
                        "name": "departureId",
                        "in": "path",
                        "description": "Departure id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "$ref": "#/components/parameters/timezone"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StetEloquent"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/element/stet": {
            "post": {
                "tags": [
                    "Element",
                    "STET"
                ],
                "description": "Create stet",
                "operationId": "actionCreateStet",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/timezone"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "properties": {
                                            "departure_id": {
                                                "description": "Departure id property",
                                                "type": "integer",
                                                "format": "int64"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "$ref": "#/components/schemas/StetCreateRequest"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StetEloquent"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/element/{departureId}/ststs": {
            "get": {
                "tags": [
                    "Element",
                    "STST"
                ],
                "description": "Get ststs",
                "operationId": "actionGetStsts",
                "parameters": [
                    {
                        "name": "departureId",
                        "in": "path",
                        "description": "Departure id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "$ref": "#/components/parameters/timezone"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StstEloquent"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/element/stst": {
            "post": {
                "tags": [
                    "Element",
                    "STST"
                ],
                "description": "Create stst",
                "operationId": "actionCreateStst",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/timezone"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "properties": {
                                            "departure_id": {
                                                "description": "Departure id property",
                                                "type": "integer",
                                                "format": "int64"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "$ref": "#/components/schemas/StstCreateRequest"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StstEloquent"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/element/{departureId}/tobts": {
            "get": {
                "tags": [
                    "Element",
                    "TOBT"
                ],
                "description": "Get tobts",
                "operationId": "actionGetTobts",
                "parameters": [
                    {
                        "name": "departureId",
                        "in": "path",
                        "description": "Departure id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "$ref": "#/components/parameters/timezone"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TobtEloquent"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/element/tobt": {
            "post": {
                "tags": [
                    "Element",
                    "TOBT"
                ],
                "description": "Create tobt",
                "operationId": "actionCreateTobt",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/timezone"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "properties": {
                                            "departure_id": {
                                                "description": "Departure id property",
                                                "type": "integer",
                                                "format": "int64"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "$ref": "#/components/schemas/TobtCreateRequest"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TobtEloquent"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/element/{departureId}/tsats": {
            "get": {
                "tags": [
                    "Element",
                    "TSAT"
                ],
                "description": "Get tsats",
                "operationId": "actionGetTsats",
                "parameters": [
                    {
                        "name": "departureId",
                        "in": "path",
                        "description": "Departure id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "$ref": "#/components/parameters/timezone"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TsatEloquent"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/element/tsat": {
            "post": {
                "tags": [
                    "Element",
                    "TSAT"
                ],
                "description": "Create tsat",
                "operationId": "actionCreateTsat",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/timezone"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "properties": {
                                            "departure_id": {
                                                "description": "Departure id property",
                                                "type": "integer",
                                                "format": "int64"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "$ref": "#/components/schemas/TsatCreateRequest"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TsatEloquent"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/element/{departureId}/ttots": {
            "get": {
                "tags": [
                    "Element",
                    "TTOT"
                ],
                "description": "Get ttots",
                "operationId": "actionGetTtots",
                "parameters": [
                    {
                        "name": "departureId",
                        "in": "path",
                        "description": "Departure id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "$ref": "#/components/parameters/timezone"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TtotEloquent"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/element/ttot": {
            "post": {
                "tags": [
                    "Element",
                    "TTOT"
                ],
                "description": "Create ttot",
                "operationId": "actionCreateTtot",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/timezone"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "properties": {
                                            "departure_id": {
                                                "description": "Departure id property",
                                                "type": "integer",
                                                "format": "int64"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "$ref": "#/components/schemas/TtotCreateRequest"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TtotEloquent"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/master-data/airlines": {
            "get": {
                "tags": [
                    "Master Data",
                    "Airline"
                ],
                "description": "Get airlines",
                "operationId": "actionGetAirlines",
                "requestBody": {
                    "content": {
                        "application/json": {}
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AirlineEloquent"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Master Data",
                    "Airline"
                ],
                "description": "Destroy airlines",
                "operationId": "actionDestroyAirlines",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ids": {
                                        "description": "Ids property",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "format": "int64"
                                        },
                                        "example": [
                                            1,
                                            2,
                                            3
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/master-data/airlines/list-search": {
            "post": {
                "tags": [
                    "Master Data",
                    "Airline"
                ],
                "description": "Airlines list search",
                "operationId": "actionAirlinesListSearch",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ListSearchParameter"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/GenericListSearchJsonResponse"
                                        },
                                        {
                                            "properties": {
                                                "rows": {
                                                    "description": "rows property",
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/AirlineEloquent"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/master-data/airlines/page-search": {
            "post": {
                "tags": [
                    "Master Data",
                    "Airline"
                ],
                "description": "Airlines page search",
                "operationId": "actionAirlinesPageSearch",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PageSearchParameter"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/GenericPageSearchJsonResponse"
                                        },
                                        {
                                            "properties": {
                                                "rows": {
                                                    "description": "rows property",
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/AirlineEloquent"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/master-data/airline": {
            "post": {
                "tags": [
                    "Master Data",
                    "Airline"
                ],
                "description": "Create airline",
                "operationId": "actionCreateAirline",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateAirlineRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/master-data/airline/{id}": {
            "get": {
                "tags": [
                    "Master Data",
                    "Airline"
                ],
                "description": "Show airline",
                "operationId": "actionShowAirline",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {}
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "Master Data",
                    "Airline"
                ],
                "description": "Update airline",
                "operationId": "actionUpdateAirline",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateAirlineRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Master Data",
                    "Airline"
                ],
                "description": "Destroy airline",
                "operationId": "actionDestroyAirline",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {}
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/master-data/airline/slug/{name}": {
            "get": {
                "tags": [
                    "Master Data",
                    "Airline"
                ],
                "description": "Return airline slug",
                "operationId": "getSlugAirline",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name parameter",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/master-data/airports": {
            "get": {
                "tags": [
                    "Master Data",
                    "Airport"
                ],
                "description": "Get airports",
                "operationId": "actionGetAirports",
                "requestBody": {
                    "content": {
                        "application/json": {}
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AirportEloquent"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "Airport"
                ],
                "description": "Update airports",
                "operationId": "actionUpdateAirports",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/timezone"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "airports"
                                ],
                                "properties": {
                                    "airports": {
                                        "description": "Airports property",
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/UpdateAirportRequest"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AirportEloquent"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            },
            "post": {
                "tags": [
                    "Master Data",
                    "Airport"
                ],
                "description": "Create airports",
                "operationId": "actionCreateAirports",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "airports": {
                                        "description": "Airports property",
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/CreateAirportRequest"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AirportEloquent"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Master Data",
                    "Airport"
                ],
                "description": "Destroy airports",
                "operationId": "actionDestroyAirports",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ids": {
                                        "description": "Ids property",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "format": "int64"
                                        },
                                        "example": [
                                            1,
                                            2,
                                            3
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/master-data/airports/list-search": {
            "post": {
                "tags": [
                    "Master Data",
                    "Airport"
                ],
                "description": "Airports list search",
                "operationId": "actionAirportsListSearch",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ListSearchParameter"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/GenericListSearchJsonResponse"
                                        },
                                        {
                                            "properties": {
                                                "rows": {
                                                    "description": "rows property",
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/AirportEloquent"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/master-data/airports/page-search": {
            "post": {
                "tags": [
                    "Master Data",
                    "Airport"
                ],
                "description": "Airports page search",
                "operationId": "actionAirportsPageSearch",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PageSearchParameter"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/GenericPageSearchJsonResponse"
                                        },
                                        {
                                            "properties": {
                                                "rows": {
                                                    "description": "rows property",
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/AirportEloquent"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/master-data/airport": {
            "post": {
                "tags": [
                    "Master Data",
                    "Airport"
                ],
                "description": "Create airport",
                "operationId": "actionCreateAirport",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateAirportRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/master-data/airport/{id}": {
            "get": {
                "tags": [
                    "Master Data",
                    "Airport"
                ],
                "description": "Show airport",
                "operationId": "actionShowAirport",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {}
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "Master Data",
                    "Airport"
                ],
                "description": "Update airport",
                "operationId": "actionUpdateAirport",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateAirportRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Master Data",
                    "Airport"
                ],
                "description": "Destroy airport",
                "operationId": "actionDestroyAirport",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {}
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/master-data/airport/iata/{code}": {
            "get": {
                "tags": [
                    "Master Data",
                    "Airport"
                ],
                "description": "Show airport by iata",
                "operationId": "actionShowAirportByIata",
                "parameters": [
                    {
                        "name": "code",
                        "in": "path",
                        "description": "Code parameter",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {}
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/master-data/airport/icao/{code}": {
            "get": {
                "tags": [
                    "Master Data",
                    "Airport"
                ],
                "description": "Show airport by icao",
                "operationId": "actionShowAirportByIcao",
                "parameters": [
                    {
                        "name": "code",
                        "in": "path",
                        "description": "Code parameter",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {}
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/master-data/airport/slug/{name}": {
            "get": {
                "tags": [
                    "Master Data",
                    "Airport"
                ],
                "description": "Return airport slug",
                "operationId": "getSlugAirport",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name parameter",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/master-data/countries": {
            "get": {
                "tags": [
                    "Master Data",
                    "Country"
                ],
                "description": "Get countries",
                "operationId": "actionGetCountries",
                "requestBody": {
                    "content": {
                        "application/json": {}
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CountryEloquent"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/master-data/countries/list-search": {
            "post": {
                "tags": [
                    "Master Data",
                    "Country"
                ],
                "description": "Countries list search",
                "operationId": "actionCountriesListSearch",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ListSearchParameter"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/GenericListSearchJsonResponse"
                                        },
                                        {
                                            "properties": {
                                                "rows": {
                                                    "description": "rows property",
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/CountryEloquent"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/master-data/countries/page-search": {
            "post": {
                "tags": [
                    "Master Data",
                    "Country"
                ],
                "description": "Countries page search",
                "operationId": "actionCountriesPageSearch",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PageSearchParameter"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/GenericPageSearchJsonResponse"
                                        },
                                        {
                                            "properties": {
                                                "rows": {
                                                    "description": "rows property",
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/CountryEloquent"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/master-data/country": {
            "post": {
                "tags": [
                    "Master Data",
                    "Country"
                ],
                "description": "Create country",
                "operationId": "actionCreateCountry",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateCountryRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/master-data/country/{id}": {
            "get": {
                "tags": [
                    "Master Data",
                    "Country"
                ],
                "description": "Show country",
                "operationId": "actionShowCountry",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {}
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "Master Data",
                    "Country"
                ],
                "description": "Update country",
                "operationId": "actionUpdateCountry",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateCountryRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Master Data",
                    "Country"
                ],
                "description": "Destroy country",
                "operationId": "actionDestroyCountry",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {}
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/master-data/country/slug/{name}": {
            "get": {
                "tags": [
                    "Master Data",
                    "Country"
                ],
                "description": "Return country slug",
                "operationId": "getSlugCountry",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name parameter",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/master-data/organizations": {
            "get": {
                "tags": [
                    "Master Data",
                    "Organization"
                ],
                "description": "Get organizations",
                "operationId": "actionGetOrganizations",
                "requestBody": {
                    "content": {
                        "application/json": {}
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/OrganizationEloquent"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/master-data/organizations/list-search": {
            "post": {
                "tags": [
                    "Master Data",
                    "Organization"
                ],
                "description": "Organizations list search",
                "operationId": "actionOrganizationsListSearch",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "property": "country_id",
                                        "type": "integer",
                                        "format": "int64"
                                    },
                                    {
                                        "$ref": "#/components/schemas/ListSearchParameter"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/GenericListSearchJsonResponse"
                                        },
                                        {
                                            "properties": {
                                                "rows": {
                                                    "description": "rows property",
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/OrganizationEloquent"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/master-data/organizations/page-search": {
            "post": {
                "tags": [
                    "Master Data",
                    "Organization"
                ],
                "description": "Organizations page search",
                "operationId": "actionOrganizationsPageSearch",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "property": "country_id",
                                        "type": "integer",
                                        "format": "int64"
                                    },
                                    {
                                        "$ref": "#/components/schemas/PageSearchParameter"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/GenericPageSearchJsonResponse"
                                        },
                                        {
                                            "properties": {
                                                "rows": {
                                                    "description": "rows property",
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/OrganizationEloquent"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/master-data/organization": {
            "post": {
                "tags": [
                    "Master Data",
                    "Organization"
                ],
                "description": "Create organization",
                "operationId": "actionCreateOrganization",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateOrganizationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/master-data/organization/{id}": {
            "get": {
                "tags": [
                    "Master Data",
                    "Organization"
                ],
                "description": "Show organization",
                "operationId": "actionShowOrganization",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {}
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "Master Data",
                    "Organization"
                ],
                "description": "Update organization",
                "operationId": "actionUpdateOrganization",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateOrganizationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Master Data",
                    "Organization"
                ],
                "description": "Destroy organization",
                "operationId": "actionDestroyOrganization",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {}
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/master-data/organization/slug/{name}": {
            "get": {
                "tags": [
                    "Master Data",
                    "Country"
                ],
                "description": "Return country slug",
                "operationId": "getSlugOrganization",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name parameter",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/master-data/vendors": {
            "get": {
                "tags": [
                    "Master Data",
                    "Vendor"
                ],
                "description": "Get vendors",
                "operationId": "actionGetVendors",
                "requestBody": {
                    "content": {
                        "application/json": {}
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/VendorEloquent"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "Vendor"
                ],
                "description": "Update vendors",
                "operationId": "actionUpdateVendors",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/timezone"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "vendors"
                                ],
                                "properties": {
                                    "vendors": {
                                        "description": "Vendors property",
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/UpdateVendorRequest"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/VendorEloquent"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            },
            "post": {
                "tags": [
                    "Master Data",
                    "Vendor"
                ],
                "description": "Create vendors",
                "operationId": "actionCreateVendors",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "vendors": {
                                        "description": "Vendors property",
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/CreateVendorRequest"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/VendorEloquent"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Master Data",
                    "Vendor"
                ],
                "description": "Destroy vendors",
                "operationId": "actionDestroyVendors",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ids": {
                                        "description": "Ids property",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "format": "int64"
                                        },
                                        "example": [
                                            1,
                                            2,
                                            3
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/master-data/vendors/page-search": {
            "post": {
                "tags": [
                    "Master Data",
                    "Vendor"
                ],
                "description": "Vendors page search",
                "operationId": "actionVendorsPageSearch",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PageSearchParameter"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/GenericPageSearchJsonResponse"
                                        },
                                        {
                                            "properties": {
                                                "rows": {
                                                    "description": "rows property",
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/VendorEloquent"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/master-data/vendor": {
            "post": {
                "tags": [
                    "Master Data",
                    "Vendor"
                ],
                "description": "Create vendor",
                "operationId": "actionCreateVendor",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateVendorRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/master-data/vendor/{id}": {
            "get": {
                "tags": [
                    "Master Data",
                    "Vendor"
                ],
                "description": "Show vendor",
                "operationId": "actionShowVendor",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {}
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "Master Data",
                    "Vendor"
                ],
                "description": "Update vendor",
                "operationId": "actionUpdateVendor",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateVendorRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Master Data",
                    "Vendor"
                ],
                "description": "Destroy vendor",
                "operationId": "actionDestroyVendor",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {}
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/master-data/vendor/slug/{name}": {
            "get": {
                "tags": [
                    "Master Data",
                    "Vendor"
                ],
                "description": "Return vendor slug",
                "operationId": "getSlugVendor",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name parameter",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/media/file-upload": {
            "post": {
                "tags": [
                    "Media"
                ],
                "description": "File upload media",
                "operationId": "actionFileUploadMedia",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "collection": {
                                        "description": "Collection property",
                                        "type": "string",
                                        "default": "PUBLIC",
                                        "enum": [
                                            "PUBLIC",
                                            "PROFILE",
                                            "ORGANIZATION"
                                        ]
                                    },
                                    "file": {
                                        "description": "File property",
                                        "type": "file",
                                        "format": "file"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/GetBasicSuccessJson"
                                        },
                                        {
                                            "properties": {
                                                "data": {
                                                    "description": "Data property",
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/media/file-uploads": {
            "post": {
                "tags": [
                    "Media"
                ],
                "description": "Files upload media",
                "operationId": "actionFilesUploadMedia",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "collection": {
                                        "description": "Collection property",
                                        "type": "string",
                                        "default": "PUBLIC",
                                        "enum": [
                                            "PUBLIC",
                                            "PROFILE",
                                            "ORGANIZATION"
                                        ]
                                    },
                                    "medias": {
                                        "description": "File property",
                                        "type": "array",
                                        "items": {
                                            "type": "file",
                                            "format": "file"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicSuccessJson"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/medias": {
            "get": {
                "tags": [
                    "Media"
                ],
                "description": "Get medias",
                "operationId": "actionGetMedias",
                "requestBody": {
                    "content": {
                        "application/json": {}
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/MediaEloquent"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Media"
                ],
                "description": "Destroy medias",
                "operationId": "actionDestroyMedias",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ids": {
                                        "description": "Ids property",
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/media/{id}": {
            "get": {
                "tags": [
                    "Media"
                ],
                "description": "Show media",
                "operationId": "actionShowMedia",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {}
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Media"
                ],
                "description": "Destroy media",
                "operationId": "actionDestroyMedia",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {}
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/membership/users": {
            "get": {
                "tags": [
                    "Membership",
                    "User"
                ],
                "description": "Get users",
                "operationId": "actionGetUsers",
                "requestBody": {
                    "content": {
                        "application/json": {}
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Membership",
                    "User"
                ],
                "description": "Destroy users",
                "operationId": "actionDestroyUsers",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ids": {
                                        "description": "Ids property",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "format": "int64"
                                        },
                                        "example": [
                                            1,
                                            2,
                                            3
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/membership/users-group-by-role": {
            "get": {
                "tags": [
                    "Membership",
                    "User"
                ],
                "description": "Get users group by role",
                "operationId": "actionGetUsersGroupByRole",
                "requestBody": {
                    "content": {
                        "application/json": {}
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/membership/users/list-search": {
            "post": {
                "tags": [
                    "Membership",
                    "User"
                ],
                "description": "Users list search",
                "operationId": "actionUsersListSearch",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ListSearchParameter"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/GenericListSearchJsonResponse"
                                        },
                                        {
                                            "properties": {
                                                "rows": {
                                                    "description": "rows property",
                                                    "type": "array",
                                                    "items": {
                                                        "allOf": [
                                                            {
                                                                "$ref": "#/components/schemas/IdentityAuditableRequest"
                                                            },
                                                            {
                                                                "$ref": "#/components/schemas/UserEloquent"
                                                            }
                                                        ]
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/membership/users/page-search": {
            "post": {
                "tags": [
                    "Membership",
                    "User"
                ],
                "description": "Users page search",
                "operationId": "actionUsersPageSearch",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PageSearchParameter"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/GenericPageSearchJsonResponse"
                                        },
                                        {
                                            "properties": {
                                                "rows": {
                                                    "description": "rows property",
                                                    "type": "array",
                                                    "items": {
                                                        "allOf": [
                                                            {
                                                                "$ref": "#/components/schemas/IdentityAuditableRequest"
                                                            },
                                                            {
                                                                "$ref": "#/components/schemas/UserEloquent"
                                                            }
                                                        ]
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/membership/user/{id}": {
            "get": {
                "tags": [
                    "Membership",
                    "User"
                ],
                "description": "Show user",
                "operationId": "actionShowUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {}
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/IdentityAuditableRequest"
                                        },
                                        {
                                            "$ref": "#/components/schemas/UserEloquent"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Membership",
                    "User"
                ],
                "description": "Destroy user",
                "operationId": "actionDestroyUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {}
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/membership/user/profile/me": {
            "get": {
                "tags": [
                    "Membership",
                    "User",
                    "Profile",
                    "Me"
                ],
                "description": "Get user profile me",
                "operationId": "actionGetUserProfileMe",
                "requestBody": {
                    "content": {
                        "application/json": {}
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/IdentityAuditableRequest"
                                        },
                                        {
                                            "$ref": "#/components/schemas/UserEloquent"
                                        },
                                        {
                                            "properties": {
                                                "profile": {
                                                    "allOf": [
                                                        {
                                                            "$ref": "#/components/schemas/IdentityAuditableRequest"
                                                        },
                                                        {
                                                            "$ref": "#/components/schemas/ProfileEloquent"
                                                        }
                                                    ]
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "Membership",
                    "User",
                    "Profile"
                ],
                "description": "Sync user profile",
                "operationId": "actionUpdateUserProfileMe",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateUserProfileRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/membership/user/profile/{userId}": {
            "get": {
                "tags": [
                    "Membership",
                    "User",
                    "Profile"
                ],
                "description": "Get user profile",
                "operationId": "actionGetUserProfile",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "User id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {}
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/IdentityAuditableRequest"
                                        },
                                        {
                                            "$ref": "#/components/schemas/UserEloquent"
                                        },
                                        {
                                            "properties": {
                                                "profile": {
                                                    "allOf": [
                                                        {
                                                            "$ref": "#/components/schemas/IdentityAuditableRequest"
                                                        },
                                                        {
                                                            "$ref": "#/components/schemas/ProfileEloquent"
                                                        }
                                                    ]
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "Membership",
                    "User",
                    "Profile"
                ],
                "description": "Sync user profile",
                "operationId": "actionUpdateUserProfile",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "User id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateUserProfileRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/membership/user/{id}/group": {
            "get": {
                "tags": [
                    "Membership",
                    "User"
                ],
                "description": "Get user group",
                "operationId": "actionGetUserGroup",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {}
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/membership/user/group": {
            "put": {
                "tags": [
                    "Membership",
                    "User"
                ],
                "description": "Update user group",
                "operationId": "actionUpdateUserGroup",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateUserGroupRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/membership/user/{id}/roles": {
            "get": {
                "tags": [
                    "Membership",
                    "User"
                ],
                "description": "Get user roles",
                "operationId": "actionGetUserRoles",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {}
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "Membership",
                    "User"
                ],
                "description": "Update user roles",
                "operationId": "actionUpdateUserRoles",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateUserRoleRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/membership/user/{id}/permissions": {
            "get": {
                "tags": [
                    "Membership",
                    "User"
                ],
                "description": "Get user permissions",
                "operationId": "actionGetUserPermissions",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {}
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Not found request"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "Membership",
                    "User"
                ],
                "description": "Update user permissions",
                "operationId": "actionUpdateUserPermissions",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateUserPermissionRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/membership/user/{id}/permission/{permissionId}/accesses": {
            "get": {
                "tags": [
                    "Membership",
                    "User"
                ],
                "description": "Get user accesses",
                "operationId": "actionGetUseAccesses",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "permissionId",
                        "in": "path",
                        "description": "Permission id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {}
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Not found request"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "Membership",
                    "User"
                ],
                "description": "Sync user accesses",
                "operationId": "actionPutUserAccesses",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "permission_id",
                        "in": "path",
                        "description": "Permission id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateUserAccessRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/system/accesses": {
            "get": {
                "tags": [
                    "System",
                    "Access"
                ],
                "description": "Get accesses",
                "operationId": "actionGetAccesses",
                "requestBody": {
                    "content": {
                        "application/json": {}
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "System",
                    "Access"
                ],
                "description": "Destroy accesses",
                "operationId": "actionDestroyAccesses",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ids": {
                                        "description": "Ids property",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "format": "int64"
                                        },
                                        "example": [
                                            1,
                                            2,
                                            3
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/system/accesses/list-search": {
            "post": {
                "tags": [
                    "System",
                    "Access"
                ],
                "description": "Accesses list search",
                "operationId": "actionAccessesListSearch",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ListSearchParameter"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/GenericListSearchJsonResponse"
                                        },
                                        {
                                            "properties": {
                                                "rows": {
                                                    "description": "rows property",
                                                    "type": "array",
                                                    "items": {
                                                        "allOf": [
                                                            {
                                                                "$ref": "#/components/schemas/IdentityAuditableRequest"
                                                            },
                                                            {
                                                                "$ref": "#/components/schemas/AccessEloquent"
                                                            }
                                                        ]
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/system/accesses/page-search": {
            "post": {
                "tags": [
                    "System",
                    "Access"
                ],
                "description": "Accesses page search",
                "operationId": "actionAccessesPageSearch",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PageSearchParameter"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/GenericPageSearchJsonResponse"
                                        },
                                        {
                                            "properties": {
                                                "rows": {
                                                    "description": "rows property",
                                                    "type": "array",
                                                    "items": {
                                                        "allOf": [
                                                            {
                                                                "$ref": "#/components/schemas/IdentityAuditableRequest"
                                                            },
                                                            {
                                                                "$ref": "#/components/schemas/AccessEloquent"
                                                            }
                                                        ]
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/system/access": {
            "post": {
                "tags": [
                    "System",
                    "Access"
                ],
                "description": "Create access",
                "operationId": "actionCreateAccess",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateAccessRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/IdentityAuditableRequest"
                                        },
                                        {
                                            "$ref": "#/components/schemas/AccessEloquent"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/system/access/{id}": {
            "get": {
                "tags": [
                    "System",
                    "Access"
                ],
                "description": "Show access",
                "operationId": "actionShowAccess",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {}
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/IdentityAuditableRequest"
                                        },
                                        {
                                            "$ref": "#/components/schemas/AccessEloquent"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "System",
                    "Access"
                ],
                "description": "Update access",
                "operationId": "actionUpdateAccess",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateAccessRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/IdentityAuditableRequest"
                                        },
                                        {
                                            "$ref": "#/components/schemas/AccessEloquent"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "System",
                    "Access"
                ],
                "description": "Destroy access",
                "operationId": "actionDestroyAccess",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {}
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/system/access/slug/{name}": {
            "get": {
                "tags": [
                    "System",
                    "Access"
                ],
                "description": "Return access slug",
                "operationId": "getSlugAccess",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name parameter",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/system/groups": {
            "get": {
                "tags": [
                    "System",
                    "Group"
                ],
                "description": "Get groups",
                "operationId": "actionGetGroups",
                "requestBody": {
                    "content": {
                        "application/json": {}
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "System",
                    "Group"
                ],
                "description": "Destroy groups",
                "operationId": "actionDestroyGroups",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ids": {
                                        "description": "Ids property",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "format": "int64"
                                        },
                                        "example": [
                                            1,
                                            2,
                                            3
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/system/groups/list-search": {
            "post": {
                "tags": [
                    "System",
                    "Group"
                ],
                "description": "Groups list search",
                "operationId": "actionGroupsListSearch",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ListSearchParameter"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/GenericListSearchJsonResponse"
                                        },
                                        {
                                            "properties": {
                                                "rows": {
                                                    "description": "rows property",
                                                    "type": "array",
                                                    "items": {
                                                        "allOf": [
                                                            {
                                                                "$ref": "#/components/schemas/IdentityAuditableRequest"
                                                            },
                                                            {
                                                                "$ref": "#/components/schemas/GroupEloquent"
                                                            }
                                                        ]
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/system/groups/page-search": {
            "post": {
                "tags": [
                    "System",
                    "Group"
                ],
                "description": "Groups page search",
                "operationId": "actionGroupsPageSearch",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PageSearchParameter"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/GenericPageSearchJsonResponse"
                                        },
                                        {
                                            "properties": {
                                                "rows": {
                                                    "description": "rows property",
                                                    "type": "array",
                                                    "items": {
                                                        "allOf": [
                                                            {
                                                                "$ref": "#/components/schemas/IdentityAuditableRequest"
                                                            },
                                                            {
                                                                "$ref": "#/components/schemas/GroupEloquent"
                                                            }
                                                        ]
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/system/group": {
            "post": {
                "tags": [
                    "System",
                    "Group"
                ],
                "description": "Create group",
                "operationId": "actionCreateGroup",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateGroupRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/IdentityAuditableRequest"
                                        },
                                        {
                                            "$ref": "#/components/schemas/GroupEloquent"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/system/group/{id}": {
            "get": {
                "tags": [
                    "System",
                    "Group"
                ],
                "description": "Show group",
                "operationId": "actionShowGroup",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {}
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/IdentityAuditableRequest"
                                        },
                                        {
                                            "$ref": "#/components/schemas/GroupEloquent"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "System",
                    "Group"
                ],
                "description": "Update group",
                "operationId": "actionUpdateGroup",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateGroupRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/IdentityAuditableRequest"
                                        },
                                        {
                                            "$ref": "#/components/schemas/GroupEloquent"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "System",
                    "Group"
                ],
                "description": "Destroy group",
                "operationId": "actionDestroyGroup",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {}
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/system/group/slug/{name}": {
            "get": {
                "tags": [
                    "System",
                    "Group"
                ],
                "description": "Return group slug",
                "operationId": "getSlugGroup",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name parameter",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/system/permissions": {
            "get": {
                "tags": [
                    "System",
                    "Permission"
                ],
                "description": "Get permissions",
                "operationId": "actionGetPermissions",
                "requestBody": {
                    "content": {
                        "application/json": {}
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "System",
                    "Permission"
                ],
                "description": "Destroy permissions",
                "operationId": "actionDestroyPermissions",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ids": {
                                        "description": "Ids property",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "format": "int64"
                                        },
                                        "example": [
                                            1,
                                            2,
                                            3
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/system/permissions/list-search": {
            "post": {
                "tags": [
                    "System",
                    "Permission"
                ],
                "description": "Permissions list search",
                "operationId": "actionPermissionsListSearch",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ListSearchParameter"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/GenericListSearchJsonResponse"
                                        },
                                        {
                                            "properties": {
                                                "rows": {
                                                    "description": "rows property",
                                                    "type": "array",
                                                    "items": {
                                                        "allOf": [
                                                            {
                                                                "$ref": "#/components/schemas/IdentityAuditableRequest"
                                                            },
                                                            {
                                                                "$ref": "#/components/schemas/PermissionEloquent"
                                                            }
                                                        ]
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/system/permissions/page-search": {
            "post": {
                "tags": [
                    "System",
                    "Permission"
                ],
                "description": "Permissions page search",
                "operationId": "actionPermissionsPageSearch",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PageSearchParameter"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/GenericPageSearchJsonResponse"
                                        },
                                        {
                                            "properties": {
                                                "rows": {
                                                    "description": "rows property",
                                                    "type": "array",
                                                    "items": {
                                                        "allOf": [
                                                            {
                                                                "$ref": "#/components/schemas/IdentityAuditableRequest"
                                                            },
                                                            {
                                                                "$ref": "#/components/schemas/PermissionEloquent"
                                                            }
                                                        ]
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/system/permission": {
            "post": {
                "tags": [
                    "System",
                    "Permission"
                ],
                "description": "Create permission",
                "operationId": "actionCreatePermission",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreatePermissionRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/IdentityAuditableRequest"
                                        },
                                        {
                                            "$ref": "#/components/schemas/PermissionEloquent"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/System/permission/{id}": {
            "get": {
                "tags": [
                    "System",
                    "Permission"
                ],
                "description": "Show permission",
                "operationId": "actionShowPermission",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {}
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/IdentityAuditableRequest"
                                        },
                                        {
                                            "$ref": "#/components/schemas/PermissionEloquent"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/system/permission/{id}": {
            "put": {
                "tags": [
                    "System",
                    "Permission"
                ],
                "description": "Update permission",
                "operationId": "actionUpdatePermission",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdatePermissionRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/IdentityAuditableRequest"
                                        },
                                        {
                                            "$ref": "#/components/schemas/GroupEloquent"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "System",
                    "Permission"
                ],
                "description": "Destroy permission",
                "operationId": "actionDestroyPermission",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {}
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/system/permission/{id}/accesses": {
            "get": {
                "tags": [
                    "System",
                    "Permission"
                ],
                "description": "Get permission accesses",
                "operationId": "actionGetPermissionAccesses",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {}
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            },
            "post": {
                "tags": [
                    "System",
                    "Permission"
                ],
                "description": "Sync permission accesses",
                "operationId": "actionSyncPermissionAccesses",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdatePermissionAccessRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/system/permission/slug/{name}": {
            "get": {
                "tags": [
                    "System",
                    "Permission"
                ],
                "description": "Return permission slug",
                "operationId": "getSlugPermission",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name parameter",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/system/roles": {
            "get": {
                "tags": [
                    "System",
                    "Role"
                ],
                "description": "Get roles",
                "operationId": "actionGetRoles",
                "parameters": [
                    {
                        "name": "group_id",
                        "in": "query",
                        "description": "Group id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {}
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/IdentityAuditableRequest"
                                        },
                                        {
                                            "$ref": "#/components/schemas/RoleEloquent"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "System",
                    "Role"
                ],
                "description": "Destroy roles",
                "operationId": "actionDestroyRoles",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ids": {
                                        "description": "Ids property",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "format": "int64"
                                        },
                                        "example": [
                                            1,
                                            2,
                                            3
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/system/roles/list-search": {
            "post": {
                "tags": [
                    "System",
                    "Role"
                ],
                "description": "Roles list search",
                "operationId": "actionRolesListSearch",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "properties": {
                                            "group_id": {
                                                "$ref": "#/components/schemas/RoleEloquent/properties/group_id"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "$ref": "#/components/schemas/ListSearchParameter"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/GenericListSearchJsonResponse"
                                        },
                                        {
                                            "properties": {
                                                "rows": {
                                                    "description": "rows property",
                                                    "type": "array",
                                                    "items": {
                                                        "allOf": [
                                                            {
                                                                "$ref": "#/components/schemas/IdentityAuditableRequest"
                                                            },
                                                            {
                                                                "$ref": "#/components/schemas/RoleEloquent"
                                                            }
                                                        ]
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/system/roles/page-search": {
            "post": {
                "tags": [
                    "System",
                    "Role"
                ],
                "description": "Roles page search",
                "operationId": "actionRolesPageSearch",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "properties": {
                                            "group_id": {
                                                "$ref": "#/components/schemas/RoleEloquent/properties/group_id"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "$ref": "#/components/schemas/PageSearchParameter"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/GenericPageSearchJsonResponse"
                                        },
                                        {
                                            "properties": {
                                                "rows": {
                                                    "description": "rows property",
                                                    "type": "array",
                                                    "items": {
                                                        "allOf": [
                                                            {
                                                                "$ref": "#/components/schemas/IdentityAuditableRequest"
                                                            },
                                                            {
                                                                "$ref": "#/components/schemas/PermissionEloquent"
                                                            }
                                                        ]
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/system/role": {
            "post": {
                "tags": [
                    "System",
                    "Role"
                ],
                "description": "Create role",
                "operationId": "actionCreateRole",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateRoleRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/IdentityAuditableRequest"
                                        },
                                        {
                                            "$ref": "#/components/schemas/PermissionEloquent"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/System/role/{id}": {
            "get": {
                "tags": [
                    "System",
                    "Role"
                ],
                "description": "Show role",
                "operationId": "actionShowRole",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {}
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/IdentityAuditableRequest"
                                        },
                                        {
                                            "$ref": "#/components/schemas/RoleEloquent"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/system/role/{id}": {
            "put": {
                "tags": [
                    "System",
                    "Role"
                ],
                "description": "Update role",
                "operationId": "actionUpdateRole",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateRoleRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/IdentityAuditableRequest"
                                        },
                                        {
                                            "$ref": "#/components/schemas/RoleEloquent"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "System",
                    "Role"
                ],
                "description": "Destroy role",
                "operationId": "actionDestroyRole",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {}
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/system/role/{id}/permissions": {
            "get": {
                "tags": [
                    "System",
                    "Role"
                ],
                "description": "Get role permissions",
                "operationId": "actionGetRolePermissions",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {}
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            },
            "post": {
                "tags": [
                    "System",
                    "Role"
                ],
                "description": "Sync role permissions",
                "operationId": "actionSyncRolePermissions",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "permissions": {
                                        "description": "Permission ids property",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "format": "int64"
                                        },
                                        "example": [
                                            1,
                                            2,
                                            3
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/system/role/slug/{name}": {
            "get": {
                "tags": [
                    "System",
                    "Role"
                ],
                "description": "Return role slug",
                "operationId": "getSlugRole",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name parameter",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorJson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericUnauthenticatedJsonResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBasicErrorWithStringJson"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "IdentityAuditableRequest": {
                "title": "Identity Auditable Request",
                "description": "Identity auditable request schema",
                "required": [
                    "id"
                ]
            },
            "UniversalyUniqueIdentityAuditableRequest": {
                "title": "Universaly Unique Identity Auditable Request",
                "description": "Universaly unique identity auditable request schema",
                "required": [
                    "uuid"
                ],
                "properties": {
                    "uuid": {
                        "description": "Universaly unique identity property",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DepartureEloquent": {
                "title": "Departure Eloquent",
                "description": "Departure eloquent schema",
                "properties": {
                    "id": {
                        "description": "Id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "aodb_id": {
                        "description": "Aodb id property",
                        "type": "integer",
                        "format": "int64"
                    },
                    "airport_id": {
                        "description": "Airport id property",
                        "type": "integer",
                        "format": "int64"
                    },
                    "airline_id": {
                        "description": "Airline id property",
                        "type": "integer",
                        "format": "int64"
                    },
                    "flight_number": {
                        "description": "Flight number property",
                        "type": "string"
                    },
                    "flight_numberable_id": {
                        "description": "Flight numberable id property",
                        "type": "integer",
                        "format": "int32"
                    },
                    "flight_numberable_type": {
                        "description": "Flight numberable type property",
                        "type": "string"
                    },
                    "call_sign": {
                        "description": "Call sign property",
                        "type": "string"
                    },
                    "nature": {
                        "description": "Nature property",
                        "type": "string"
                    },
                    "natureable_id": {
                        "description": "Natureable id property",
                        "type": "integer",
                        "format": "int32"
                    },
                    "natureable_type": {
                        "description": "Natureable type property",
                        "type": "string"
                    },
                    "acft": {
                        "description": "Acft property",
                        "type": "string"
                    },
                    "acftable_id": {
                        "description": "Acftable id property",
                        "type": "integer",
                        "format": "int32"
                    },
                    "acftable_type": {
                        "description": "Acftable type property",
                        "type": "string"
                    },
                    "register": {
                        "description": "Register property",
                        "type": "string"
                    },
                    "registerable_id": {
                        "description": "Registerable id property",
                        "type": "integer",
                        "format": "int32"
                    },
                    "registerable_type": {
                        "description": "Registerable type property",
                        "type": "string"
                    },
                    "stand": {
                        "description": "Stand property",
                        "type": "string"
                    },
                    "standable_id": {
                        "description": "Standable id property",
                        "type": "integer",
                        "format": "int32"
                    },
                    "standable_type": {
                        "description": "Standable type property",
                        "type": "string"
                    },
                    "gate_name": {
                        "description": "Gate name property",
                        "type": "string"
                    },
                    "gate_nameable_id": {
                        "description": "Gate nameable id property",
                        "type": "integer",
                        "format": "int32"
                    },
                    "gate_nameable_type": {
                        "description": "Gate nameable type property",
                        "type": "string"
                    },
                    "gate_open": {
                        "description": "Gate open property",
                        "type": "string",
                        "format": "date-time",
                        "example": "YYYY-MM-DD HH:MM:SS"
                    },
                    "gate_openable_id": {
                        "description": "Gate openable id property",
                        "type": "integer",
                        "format": "int32"
                    },
                    "gate_openable_type": {
                        "description": "Gate openable type property",
                        "type": "string"
                    },
                    "runway_actual": {
                        "description": "Runway actual property",
                        "type": "string"
                    },
                    "runway_actualable_id": {
                        "description": "Runway actualable id property",
                        "type": "integer",
                        "format": "int32"
                    },
                    "runway_actualable_type": {
                        "description": "Runway actualable type property",
                        "type": "string"
                    },
                    "runway_estimated": {
                        "description": "Runway estimated property",
                        "type": "string"
                    },
                    "runway_estimatedable_id": {
                        "description": "Runway estimatedable id property",
                        "type": "integer",
                        "format": "int32"
                    },
                    "runway_estimatedable_type": {
                        "description": "Runway estimatedable type property",
                        "type": "string"
                    },
                    "transit": {
                        "description": "Transit property",
                        "type": "string"
                    },
                    "transitable_id": {
                        "description": "Transitable id property",
                        "type": "integer",
                        "format": "int32"
                    },
                    "transitable_type": {
                        "description": "Transitable type property",
                        "type": "string"
                    },
                    "destination": {
                        "description": "Destination property",
                        "type": "string"
                    },
                    "destinationable_id": {
                        "description": "Destinationable id property",
                        "type": "integer",
                        "format": "int32"
                    },
                    "destinationable_type": {
                        "description": "Destinationable type property",
                        "type": "string"
                    },
                    "status": {
                        "description": "Status property",
                        "type": "string"
                    },
                    "code_share": {
                        "description": "Code share property",
                        "type": "string"
                    },
                    "data_origin": {
                        "description": "Data origin property",
                        "type": "string"
                    },
                    "data_originable_id": {
                        "description": "Data originable id property",
                        "type": "integer",
                        "format": "int32"
                    },
                    "data_originable_type": {
                        "description": "Data originable type property",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DepartureResponse": {
                "title": "Departure Response",
                "description": "Departure response schema",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DepartureEloquent"
                    },
                    {
                        "properties": {
                            "sobt": {
                                "description": "Sobt property",
                                "type": "string",
                                "format": "date-time",
                                "example": "YYYY-MM-DD HH:MM:SS"
                            },
                            "eobt": {
                                "description": "Eobt property",
                                "type": "string",
                                "format": "date-time",
                                "example": "YYYY-MM-DD HH:MM:SS"
                            },
                            "tobt": {
                                "description": "Eobt property",
                                "type": "string",
                                "format": "date-time",
                                "example": "YYYY-MM-DD HH:MM:SS"
                            },
                            "aegt": {
                                "description": "Aegt property",
                                "type": "string",
                                "format": "date-time",
                                "example": "YYYY-MM-DD HH:MM:SS"
                            },
                            "ardt": {
                                "description": "Ardt property",
                                "type": "string",
                                "format": "date-time",
                                "example": "YYYY-MM-DD HH:MM:SS"
                            },
                            "tsat": {
                                "description": "Tsat property",
                                "type": "string",
                                "format": "date-time",
                                "example": "YYYY-MM-DD HH:MM:SS"
                            },
                            "aobt": {
                                "description": "Aobt property",
                                "type": "string",
                                "format": "date-time",
                                "example": "YYYY-MM-DD HH:MM:SS"
                            },
                            "acgt": {
                                "description": "Acgt property",
                                "type": "string",
                                "format": "date-time",
                                "example": "YYYY-MM-DD HH:MM:SS"
                            },
                            "ttot": {
                                "description": "Ttot property",
                                "type": "string",
                                "format": "date-time",
                                "example": "YYYY-MM-DD HH:MM:SS"
                            },
                            "atot": {
                                "description": "Atot property",
                                "type": "string",
                                "format": "date-time",
                                "example": "YYYY-MM-DD HH:MM:SS"
                            },
                            "departure_meta": {
                                "$ref": "#/components/schemas/DepartureMetaEloquent"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "DepartureHistoryResponse": {
                "title": "Departure History Response",
                "description": "Departure history response schema",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DepartureEloquent"
                    },
                    {
                        "properties": {
                            "sobt": {
                                "description": "Sobt property",
                                "type": "string",
                                "format": "date-time",
                                "example": "YYYY-MM-DD HH:MM:SS"
                            },
                            "eobt": {
                                "description": "Eobt property",
                                "type": "string",
                                "format": "date-time",
                                "example": "YYYY-MM-DD HH:MM:SS"
                            },
                            "tobt": {
                                "description": "Eobt property",
                                "type": "string",
                                "format": "date-time",
                                "example": "YYYY-MM-DD HH:MM:SS"
                            },
                            "aegt": {
                                "description": "Aegt property",
                                "type": "string",
                                "format": "date-time",
                                "example": "YYYY-MM-DD HH:MM:SS"
                            },
                            "ardt": {
                                "description": "Ardt property",
                                "type": "string",
                                "format": "date-time",
                                "example": "YYYY-MM-DD HH:MM:SS"
                            },
                            "tsat": {
                                "description": "Tsat property",
                                "type": "string",
                                "format": "date-time",
                                "example": "YYYY-MM-DD HH:MM:SS"
                            },
                            "aobt": {
                                "description": "Aobt property",
                                "type": "string",
                                "format": "date-time",
                                "example": "YYYY-MM-DD HH:MM:SS"
                            },
                            "acgt": {
                                "description": "Acgt property",
                                "type": "string",
                                "format": "date-time",
                                "example": "YYYY-MM-DD HH:MM:SS"
                            },
                            "ttot": {
                                "description": "Ttot property",
                                "type": "string",
                                "format": "date-time",
                                "example": "YYYY-MM-DD HH:MM:SS"
                            },
                            "atot": {
                                "description": "Atot property",
                                "type": "string",
                                "format": "date-time",
                                "example": "YYYY-MM-DD HH:MM:SS"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "DepartureTobtUpdatedResponse": {
                "title": "Departure Tobt Updated Response",
                "description": "Departure tobt updated response schema",
                "properties": {
                    "departure_tobts_updated": {
                        "type": "array",
                        "items": {},
                        "example": []
                    },
                    "depature_has_updated_by_super_admin_count": {
                        "type": "integer",
                        "format": "int64",
                        "example": 0
                    },
                    "depature_has_updated_by_admin_count": {
                        "type": "integer",
                        "format": "int64",
                        "example": 0
                    },
                    "depature_has_updated_by_military_count": {
                        "type": "integer",
                        "format": "int64",
                        "example": 0
                    },
                    "depature_has_updated_by_airport_operator_count": {
                        "type": "integer",
                        "format": "int64",
                        "example": 0
                    },
                    "depature_has_updated_by_ground_services_count": {
                        "type": "integer",
                        "format": "int64",
                        "example": 0
                    },
                    "depature_has_updated_by_airline_operator_center_count": {
                        "type": "integer",
                        "format": "int64",
                        "example": 0
                    },
                    "depature_has_updated_by_dispatcher_count": {
                        "type": "integer",
                        "format": "int64",
                        "example": 0
                    },
                    "depature_has_updated_by_gh_coordinator_count": {
                        "type": "integer",
                        "format": "int64",
                        "example": 0
                    },
                    "depature_has_updated_by_supervisor_count": {
                        "type": "integer",
                        "format": "int64",
                        "example": 0
                    },
                    "depature_has_updated_by_clearance_delivery_count": {
                        "type": "integer",
                        "format": "int64",
                        "example": 0
                    },
                    "depature_has_updated_by_ground_controller_count": {
                        "type": "integer",
                        "format": "int64",
                        "example": 0
                    },
                    "depature_has_updated_by_flow_control_count": {
                        "type": "integer",
                        "format": "int64",
                        "example": 0
                    },
                    "depature_has_updated_by_approach_control_count": {
                        "type": "integer",
                        "format": "int64",
                        "example": 0
                    },
                    "depature_has_updated_by_area_control_count": {
                        "type": "integer",
                        "format": "int64",
                        "example": 0
                    }
                },
                "type": "object"
            },
            "DepartureMetaEloquent": {
                "title": "Departure Meta Eloquent",
                "description": "Departure meta eloquent schema",
                "properties": {
                    "id": {
                        "description": "Id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "departure_id": {
                        "description": "Departure id property",
                        "type": "integer",
                        "format": "int64"
                    },
                    "flight": {
                        "description": "Flight property",
                        "type": "object",
                        "example": "{\"priority\":{\"icon\":null,\"type\":null,\"blink\":null},\"tickmark\":{\"icon\":null,\"blink\":null,\"color\":null},\"acknowledge\":false}"
                    },
                    "sobt": {
                        "description": "Sobt property",
                        "type": "object",
                        "example": "{\"tickmark\":{\"icon\":null,\"blink\":null,\"color\":null}}"
                    },
                    "eobt": {
                        "description": "Eobt property",
                        "type": "object",
                        "example": "{\"tickmark\":{\"icon\":null,\"blink\":null,\"color\":null}}"
                    },
                    "tobt": {
                        "description": "Tobt property",
                        "type": "object",
                        "example": "{\"tickmark\":{\"icon\":null,\"blink\":null,\"color\":null}}"
                    },
                    "aegt": {
                        "description": "Aegt property",
                        "type": "object",
                        "example": "{\"tickmark\":{\"icon\":null,\"blink\":null,\"color\":null}}"
                    },
                    "ardt": {
                        "description": "Ardt property",
                        "type": "object",
                        "example": "{\"tickmark\":{\"icon\":null,\"blink\":null,\"color\":null}}"
                    },
                    "aobt": {
                        "description": "Aobt property",
                        "type": "object",
                        "example": "{\"tickmark\":{\"icon\":null,\"blink\":null,\"color\":null}}"
                    },
                    "tsat": {
                        "description": "Tsat property",
                        "type": "object",
                        "example": "{\"tickmark\":{\"icon\":null,\"blink\":null,\"color\":null}}"
                    },
                    "ttot": {
                        "description": "Ttot property",
                        "type": "object",
                        "example": "{\"tickmark\":{\"icon\":null,\"blink\":null,\"color\":null}}"
                    },
                    "atot": {
                        "description": "Atot property",
                        "type": "object",
                        "example": "{\"tickmark\":{\"icon\":null,\"blink\":null,\"color\":null}}"
                    }
                },
                "type": "object"
            },
            "FlightInformationEloquent": {
                "title": "Flight Information Eloquent",
                "description": "Flight information eloquent schema",
                "properties": {
                    "id": {
                        "description": "Id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "departure_id": {
                        "description": "Departure id property",
                        "type": "integer",
                        "format": "int64"
                    },
                    "type": {
                        "description": "Type property",
                        "type": "string"
                    },
                    "reason": {
                        "description": "Reason property",
                        "type": "string"
                    },
                    "role_id": {
                        "description": "Role id property",
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "type": "object"
            },
            "AcgtEloquent": {
                "title": "Acgt Eloquent",
                "description": "Acgt eloquent schema",
                "properties": {
                    "id": {
                        "description": "Id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "departure_id": {
                        "description": "Departure id property",
                        "type": "integer",
                        "format": "int64"
                    },
                    "acgt": {
                        "description": "Acgt property",
                        "type": "string",
                        "format": "date-time",
                        "example": "YYYY-MM-DD HH:MM:SS"
                    },
                    "reason": {
                        "description": "Reason property",
                        "type": "string"
                    },
                    "init": {
                        "description": "Init property",
                        "type": "bool"
                    },
                    "acgtable_id": {
                        "description": "Acgtable id property",
                        "type": "integer",
                        "format": "int64"
                    },
                    "acgtable_type": {
                        "description": "Acgtable type property",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "AcztEloquent": {
                "title": "Aczt Eloquent",
                "description": "Aczt eloquent schema",
                "properties": {
                    "id": {
                        "description": "Id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "departure_id": {
                        "description": "Departure id property",
                        "type": "integer",
                        "format": "int64"
                    },
                    "aczt": {
                        "description": "Aczt property",
                        "type": "string",
                        "format": "date-time",
                        "example": "YYYY-MM-DD HH:MM:SS"
                    },
                    "reason": {
                        "description": "Reason property",
                        "type": "string"
                    },
                    "init": {
                        "description": "Init property",
                        "type": "bool"
                    },
                    "acztable_id": {
                        "description": "Acztable id property",
                        "type": "integer",
                        "format": "int64"
                    },
                    "acztable_type": {
                        "description": "Acztable type property",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "AditEloquent": {
                "title": "Adit Eloquent",
                "description": "Adit eloquent schema",
                "properties": {
                    "id": {
                        "description": "Id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "departure_id": {
                        "description": "Departure id property",
                        "type": "integer",
                        "format": "int64"
                    },
                    "adit": {
                        "description": "Adit property",
                        "type": "integer",
                        "format": "int64"
                    },
                    "reason": {
                        "description": "Reason property",
                        "type": "string"
                    },
                    "init": {
                        "description": "Init property",
                        "type": "bool"
                    },
                    "aditable_id": {
                        "description": "Aditable id property",
                        "type": "integer",
                        "format": "int64"
                    },
                    "aditable_type": {
                        "description": "Aditable type property",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "AegtEloquent": {
                "title": "Aegt Eloquent",
                "description": "Aegt eloquent schema",
                "properties": {
                    "id": {
                        "description": "Id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "departure_id": {
                        "description": "Departure id property",
                        "type": "integer",
                        "format": "int64"
                    },
                    "aegt": {
                        "description": "Aegt property",
                        "type": "string",
                        "format": "date-time",
                        "example": "YYYY-MM-DD HH:MM:SS"
                    },
                    "reason": {
                        "description": "Reason property",
                        "type": "string"
                    },
                    "init": {
                        "description": "Init property",
                        "type": "bool"
                    },
                    "aegtable_id": {
                        "description": "Aegtable id property",
                        "type": "integer",
                        "format": "int64"
                    },
                    "aegtable_type": {
                        "description": "Aegtable type property",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "AeztEloquent": {
                "title": "Aezt Eloquent",
                "description": "Aezt eloquent schema",
                "properties": {
                    "id": {
                        "description": "Id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "departure_id": {
                        "description": "Departure id property",
                        "type": "integer",
                        "format": "int64"
                    },
                    "aezt": {
                        "description": "Aezt property",
                        "type": "string",
                        "format": "date-time",
                        "example": "YYYY-MM-DD HH:MM:SS"
                    },
                    "reason": {
                        "description": "Reason property",
                        "type": "string"
                    },
                    "init": {
                        "description": "Init property",
                        "type": "bool"
                    },
                    "aeztable_id": {
                        "description": "Aeztable id property",
                        "type": "integer",
                        "format": "int64"
                    },
                    "aeztable_type": {
                        "description": "Aeztable type property",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "AghtEloquent": {
                "title": "Aght Eloquent",
                "description": "Aght eloquent schema",
                "properties": {
                    "id": {
                        "description": "Id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "departure_id": {
                        "description": "Departure id property",
                        "type": "integer",
                        "format": "int64"
                    },
                    "aght": {
                        "description": "Aght property",
                        "type": "string",
                        "format": "date-time",
                        "example": "YYYY-MM-DD HH:MM:SS"
                    },
                    "reason": {
                        "description": "Reason property",
                        "type": "string"
                    },
                    "init": {
                        "description": "Init property",
                        "type": "bool"
                    },
                    "aghtable_id": {
                        "description": "Aghtable id property",
                        "type": "integer",
                        "format": "int64"
                    },
                    "aghtable_type": {
                        "description": "Aghtable type property",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "AobtEloquent": {
                "title": "Aobt Eloquent",
                "description": "Aobt eloquent schema",
                "properties": {
                    "id": {
                        "description": "Id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "departure_id": {
                        "description": "Departure id property",
                        "type": "integer",
                        "format": "int64"
                    },
                    "aobt": {
                        "description": "Aobt property",
                        "type": "string",
                        "format": "date-time",
                        "example": "YYYY-MM-DD HH:MM:SS"
                    },
                    "reason": {
                        "description": "Reason property",
                        "type": "string"
                    },
                    "init": {
                        "description": "Init property",
                        "type": "bool"
                    },
                    "aobtable_id": {
                        "description": "Aobtable id property",
                        "type": "integer",
                        "format": "int64"
                    },
                    "aobtable_type": {
                        "description": "Aobtable type property",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ArdtEloquent": {
                "title": "Ardt Eloquent",
                "description": "Ardt eloquent schema",
                "properties": {
                    "id": {
                        "description": "Id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "departure_id": {
                        "description": "Departure id property",
                        "type": "integer",
                        "format": "int64"
                    },
                    "ardt": {
                        "description": "Ardt property",
                        "type": "string",
                        "format": "date-time",
                        "example": "YYYY-MM-DD HH:MM:SS"
                    },
                    "reason": {
                        "description": "Reason property",
                        "type": "string"
                    },
                    "init": {
                        "description": "Init property",
                        "type": "bool"
                    },
                    "ardtable_id": {
                        "description": "Ardtable id property",
                        "type": "integer",
                        "format": "int64"
                    },
                    "ardtable_type": {
                        "description": "Ardtable type property",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ArztEloquent": {
                "title": "Arzt Eloquent",
                "description": "Arzt eloquent schema",
                "properties": {
                    "id": {
                        "description": "Id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "departure_id": {
                        "description": "Departure id property",
                        "type": "integer",
                        "format": "int64"
                    },
                    "arzt": {
                        "description": "Arzt property",
                        "type": "string",
                        "format": "date-time",
                        "example": "YYYY-MM-DD HH:MM:SS"
                    },
                    "reason": {
                        "description": "Reason property",
                        "type": "string"
                    },
                    "init": {
                        "description": "Init property",
                        "type": "bool"
                    },
                    "arztable_id": {
                        "description": "Arztable id property",
                        "type": "integer",
                        "format": "int64"
                    },
                    "arztable_type": {
                        "description": "Arztable type property",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "AsbtEloquent": {
                "title": "Asbt Eloquent",
                "description": "Asbt eloquent schema",
                "properties": {
                    "id": {
                        "description": "Id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "departure_id": {
                        "description": "Departure id property",
                        "type": "integer",
                        "format": "int64"
                    },
                    "asbt": {
                        "description": "Asbt property",
                        "type": "string",
                        "format": "date-time",
                        "example": "YYYY-MM-DD HH:MM:SS"
                    },
                    "reason": {
                        "description": "Reason property",
                        "type": "string"
                    },
                    "init": {
                        "description": "Init property",
                        "type": "bool"
                    },
                    "asbtable_id": {
                        "description": "Asbtable id property",
                        "type": "integer",
                        "format": "int64"
                    },
                    "asbtable_type": {
                        "description": "Asbtable type property",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "AsrtEloquent": {
                "title": "Asrt Eloquent",
                "description": "Asrt eloquent schema",
                "properties": {
                    "id": {
                        "description": "Id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "departure_id": {
                        "description": "Departure id property",
                        "type": "integer",
                        "format": "int64"
                    },
                    "asrt": {
                        "description": "Asrt property",
                        "type": "string",
                        "format": "date-time",
                        "example": "YYYY-MM-DD HH:MM:SS"
                    },
                    "reason": {
                        "description": "Reason property",
                        "type": "string"
                    },
                    "init": {
                        "description": "Init property",
                        "type": "bool"
                    },
                    "asrtable_id": {
                        "description": "Asrtable id property",
                        "type": "integer",
                        "format": "int64"
                    },
                    "asrtable_type": {
                        "description": "Asrtable type property",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "AtetEloquent": {
                "title": "Atet Eloquent",
                "description": "Atet eloquent schema",
                "properties": {
                    "id": {
                        "description": "Id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "departure_id": {
                        "description": "Departure id property",
                        "type": "integer",
                        "format": "int64"
                    },
                    "atet": {
                        "description": "Atet property",
                        "type": "string",
                        "format": "date-time",
                        "example": "YYYY-MM-DD HH:MM:SS"
                    },
                    "reason": {
                        "description": "Reason property",
                        "type": "string"
                    },
                    "init": {
                        "description": "Init property",
                        "type": "bool"
                    },
                    "atetable_id": {
                        "description": "Atetable id property",
                        "type": "integer",
                        "format": "int64"
                    },
                    "atetable_type": {
                        "description": "Atetable type property",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "AtotEloquent": {
                "title": "Atot Eloquent",
                "description": "Atot eloquent schema",
                "properties": {
                    "id": {
                        "description": "Id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "departure_id": {
                        "description": "Departure id property",
                        "type": "integer",
                        "format": "int64"
                    },
                    "atot": {
                        "description": "Atot property",
                        "type": "string",
                        "format": "date-time",
                        "example": "YYYY-MM-DD HH:MM:SS"
                    },
                    "reason": {
                        "description": "Reason property",
                        "type": "string"
                    },
                    "init": {
                        "description": "Init property",
                        "type": "bool"
                    },
                    "atotable_id": {
                        "description": "Atotable id property",
                        "type": "integer",
                        "format": "int64"
                    },
                    "atotable_type": {
                        "description": "Atotable type property",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "AtstEloquent": {
                "title": "Atst Eloquent",
                "description": "Atst eloquent schema",
                "properties": {
                    "id": {
                        "description": "Id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "departure_id": {
                        "description": "Departure id property",
                        "type": "integer",
                        "format": "int64"
                    },
                    "atst": {
                        "description": "Atst property",
                        "type": "string",
                        "format": "date-time",
                        "example": "YYYY-MM-DD HH:MM:SS"
                    },
                    "reason": {
                        "description": "Reason property",
                        "type": "string"
                    },
                    "init": {
                        "description": "Init property",
                        "type": "bool"
                    },
                    "atstable_id": {
                        "description": "Atstable id property",
                        "type": "integer",
                        "format": "int64"
                    },
                    "atstable_type": {
                        "description": "Atstable type property",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "AtttEloquent": {
                "title": "Attt Eloquent",
                "description": "Attt eloquent schema",
                "properties": {
                    "id": {
                        "description": "Id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "departure_id": {
                        "description": "Departure id property",
                        "type": "integer",
                        "format": "int64"
                    },
                    "attt": {
                        "description": "Attt property",
                        "type": "integer",
                        "format": "int64"
                    },
                    "reason": {
                        "description": "Reason property",
                        "type": "string"
                    },
                    "init": {
                        "description": "Init property",
                        "type": "bool"
                    },
                    "atttable_id": {
                        "description": "Atttable id property",
                        "type": "integer",
                        "format": "int64"
                    },
                    "atttable_type": {
                        "description": "Atttable type property",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "AxotEloquent": {
                "title": "Axot Eloquent",
                "description": "Axot eloquent schema",
                "properties": {
                    "id": {
                        "description": "Id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "departure_id": {
                        "description": "Departure id property",
                        "type": "integer",
                        "format": "int64"
                    },
                    "axot": {
                        "description": "Axot property",
                        "type": "integer",
                        "format": "int64"
                    },
                    "reason": {
                        "description": "Reason property",
                        "type": "string"
                    },
                    "init": {
                        "description": "Init property",
                        "type": "bool"
                    },
                    "axotable_id": {
                        "description": "Axotable id property",
                        "type": "integer",
                        "format": "int64"
                    },
                    "axotable_type": {
                        "description": "Axotable type property",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "AzatEloquent": {
                "title": "Azat Eloquent",
                "description": "Azat eloquent schema",
                "properties": {
                    "id": {
                        "description": "Id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "departure_id": {
                        "description": "Departure id property",
                        "type": "integer",
                        "format": "int64"
                    },
                    "azat": {
                        "description": "Azat property",
                        "type": "string",
                        "format": "date-time",
                        "example": "YYYY-MM-DD HH:MM:SS"
                    },
                    "reason": {
                        "description": "Reason property",
                        "type": "string"
                    },
                    "init": {
                        "description": "Init property",
                        "type": "bool"
                    },
                    "azatable_id": {
                        "description": "Azatable id property",
                        "type": "integer",
                        "format": "int64"
                    },
                    "azatable_type": {
                        "description": "Azatable type property",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CtotEloquent": {
                "title": "Ctot Eloquent",
                "description": "Ctot eloquent schema",
                "properties": {
                    "id": {
                        "description": "Id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "departure_id": {
                        "description": "Departure id property",
                        "type": "integer",
                        "format": "int64"
                    },
                    "ctot": {
                        "description": "Ctot property",
                        "type": "string",
                        "format": "date-time",
                        "example": "YYYY-MM-DD HH:MM:SS"
                    },
                    "reason": {
                        "description": "Reason property",
                        "type": "string"
                    },
                    "init": {
                        "description": "Init property",
                        "type": "bool"
                    },
                    "ctotable_id": {
                        "description": "Ctotable id property",
                        "type": "integer",
                        "format": "int64"
                    },
                    "ctotable_type": {
                        "description": "Ctotable type property",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "EcztEloquent": {
                "title": "Eczt Eloquent",
                "description": "Eczt eloquent schema",
                "properties": {
                    "id": {
                        "description": "Id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "departure_id": {
                        "description": "Departure id property",
                        "type": "integer",
                        "format": "int64"
                    },
                    "eczt": {
                        "description": "Eczt property",
                        "type": "string",
                        "format": "date-time",
                        "example": "YYYY-MM-DD HH:MM:SS"
                    },
                    "reason": {
                        "description": "Reason property",
                        "type": "string"
                    },
                    "init": {
                        "description": "Init property",
                        "type": "bool"
                    },
                    "ecztable_id": {
                        "description": "Ecztable id property",
                        "type": "integer",
                        "format": "int64"
                    },
                    "ecztable_type": {
                        "description": "Ecztable type property",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "EditEloquent": {
                "title": "Edit Eloquent",
                "description": "Edit eloquent schema",
                "properties": {
                    "id": {
                        "description": "Id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "departure_id": {
                        "description": "Departure id property",
                        "type": "integer",
                        "format": "int64"
                    },
                    "edit": {
                        "description": "Edit property",
                        "type": "integer",
                        "format": "int64"
                    },
                    "reason": {
                        "description": "Reason property",
                        "type": "string"
                    },
                    "init": {
                        "description": "Init property",
                        "type": "bool"
                    },
                    "editable_id": {
                        "description": "Editable id property",
                        "type": "integer",
                        "format": "int64"
                    },
                    "editable_type": {
                        "description": "Editable type property",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "EeztEloquent": {
                "title": "Eezt Eloquent",
                "description": "Eezt eloquent schema",
                "properties": {
                    "id": {
                        "description": "Id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "departure_id": {
                        "description": "Departure id property",
                        "type": "integer",
                        "format": "int64"
                    },
                    "eezt": {
                        "description": "Eezt property",
                        "type": "string",
                        "format": "date-time",
                        "example": "YYYY-MM-DD HH:MM:SS"
                    },
                    "reason": {
                        "description": "Reason property",
                        "type": "string"
                    },
                    "init": {
                        "description": "Init property",
                        "type": "bool"
                    },
                    "eeztable_id": {
                        "description": "Eeztable id property",
                        "type": "integer",
                        "format": "int64"
                    },
                    "eeztable_type": {
                        "description": "Eeztable type property",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "EobtEloquent": {
                "title": "Eobt Eloquent",
                "description": "Eobt eloquent schema",
                "required": [
                    "departure_id",
                    "eobt",
                    "role_initialize_id",
                    "role_origin_id"
                ],
                "properties": {
                    "id": {
                        "description": "Id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "departure_id": {
                        "description": "Departure id property",
                        "type": "integer",
                        "format": "int64"
                    },
                    "eobt": {
                        "description": "Eobt property",
                        "type": "string",
                        "format": "date-time",
                        "example": "YYYY-MM-DD HH:MM:SS"
                    },
                    "reason": {
                        "description": "Reason property",
                        "type": "string"
                    },
                    "init": {
                        "description": "Init property",
                        "type": "bool"
                    },
                    "eobtable_id": {
                        "description": "Eobtable id property",
                        "type": "integer",
                        "format": "int64"
                    },
                    "eobtable_type": {
                        "description": "Eobtable type property",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ErztEloquent": {
                "title": "Erzt Eloquent",
                "description": "Erzt eloquent schema",
                "properties": {
                    "id": {
                        "description": "Id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "departure_id": {
                        "description": "Departure id property",
                        "type": "integer",
                        "format": "int64"
                    },
                    "erzt": {
                        "description": "Erzt property",
                        "type": "string",
                        "format": "date-time",
                        "example": "YYYY-MM-DD HH:MM:SS"
                    },
                    "reason": {
                        "description": "Reason property",
                        "type": "string"
                    },
                    "init": {
                        "description": "Init property",
                        "type": "bool"
                    },
                    "erztable_id": {
                        "description": "Erztable id property",
                        "type": "integer",
                        "format": "int64"
                    },
                    "erztable_type": {
                        "description": "Erztable type property",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "EtotEloquent": {
                "title": "Etot Eloquent",
                "description": "Etot eloquent schema",
                "properties": {
                    "id": {
                        "description": "Id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "departure_id": {
                        "description": "Departure id property",
                        "type": "integer",
                        "format": "int64"
                    },
                    "etot": {
                        "description": "Etot property",
                        "type": "string",
                        "format": "date-time",
                        "example": "YYYY-MM-DD HH:MM:SS"
                    },
                    "reason": {
                        "description": "Reason property",
                        "type": "string"
                    },
                    "init": {
                        "description": "Init property",
                        "type": "bool"
                    },
                    "etotable_id": {
                        "description": "Etotable id property",
                        "type": "integer",
                        "format": "int64"
                    },
                    "etotable_type": {
                        "description": "Etotable type property",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ExotEloquent": {
                "title": "Exot Eloquent",
                "description": "Exot eloquent schema",
                "properties": {
                    "id": {
                        "description": "Id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "departure_id": {
                        "description": "Departure id property",
                        "type": "integer",
                        "format": "int64"
                    },
                    "exot": {
                        "description": "Exot property",
                        "type": "integer",
                        "format": "int64"
                    },
                    "reason": {
                        "description": "Reason property",
                        "type": "string"
                    },
                    "init": {
                        "description": "Init property",
                        "type": "bool"
                    },
                    "exotable_id": {
                        "description": "Exotable id property",
                        "type": "integer",
                        "format": "int64"
                    },
                    "exotable_type": {
                        "description": "Exotable type property",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "SobtEloquent": {
                "title": "Sobt Eloquent",
                "description": "Sobt eloquent schema",
                "properties": {
                    "id": {
                        "description": "Id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "departure_id": {
                        "description": "Departure id property",
                        "type": "integer",
                        "format": "int64"
                    },
                    "sobt": {
                        "description": "Sobt property",
                        "type": "string",
                        "format": "date-time",
                        "example": "YYYY-MM-DD HH:MM:SS"
                    },
                    "reason": {
                        "description": "Reason property",
                        "type": "string"
                    },
                    "init": {
                        "description": "Init property",
                        "type": "bool"
                    },
                    "sobtable_id": {
                        "description": "Sobtable id property",
                        "type": "integer",
                        "format": "int64"
                    },
                    "sobtable_type": {
                        "description": "Sobtable type property",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "StetEloquent": {
                "title": "Stet Eloquent",
                "description": "Stet eloquent schema",
                "properties": {
                    "id": {
                        "description": "Id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "departure_id": {
                        "description": "Departure id property",
                        "type": "integer",
                        "format": "int64"
                    },
                    "stet": {
                        "description": "Stet property",
                        "type": "string",
                        "format": "date-time",
                        "example": "YYYY-MM-DD HH:MM:SS"
                    },
                    "reason": {
                        "description": "Reason property",
                        "type": "string"
                    },
                    "init": {
                        "description": "Init property",
                        "type": "bool"
                    },
                    "stetable_id": {
                        "description": "Stetable id property",
                        "type": "integer",
                        "format": "int64"
                    },
                    "stetable_type": {
                        "description": "Stetable type property",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "StstEloquent": {
                "title": "Stst Eloquent",
                "description": "Stst eloquent schema",
                "properties": {
                    "id": {
                        "description": "Id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "departure_id": {
                        "description": "Departure id property",
                        "type": "integer",
                        "format": "int64"
                    },
                    "stst": {
                        "description": "Stst property",
                        "type": "string",
                        "format": "date-time",
                        "example": "YYYY-MM-DD HH:MM:SS"
                    },
                    "reason": {
                        "description": "Reason property",
                        "type": "string"
                    },
                    "init": {
                        "description": "Init property",
                        "type": "bool"
                    },
                    "ststable_id": {
                        "description": "Ststable id property",
                        "type": "integer",
                        "format": "int64"
                    },
                    "ststable_type": {
                        "description": "Ststable type property",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "TobtEloquent": {
                "title": "Tobt Eloquent",
                "description": "Tobt eloquent schema",
                "properties": {
                    "id": {
                        "description": "Id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "departure_id": {
                        "description": "Departure id property",
                        "type": "integer",
                        "format": "int64"
                    },
                    "tobt": {
                        "description": "Tobt property",
                        "type": "string",
                        "format": "date-time",
                        "example": "YYYY-MM-DD HH:MM:SS"
                    },
                    "reason": {
                        "description": "Reason property",
                        "type": "string"
                    },
                    "init": {
                        "description": "Init property",
                        "type": "bool"
                    },
                    "tobtable_id": {
                        "description": "Tobtable id property",
                        "type": "integer",
                        "format": "int64"
                    },
                    "tobtable_type": {
                        "description": "Tobtable type property",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "TsatEloquent": {
                "title": "Tsat Eloquent",
                "description": "Tsat eloquent schema",
                "properties": {
                    "id": {
                        "description": "Id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "departure_id": {
                        "description": "Departure id property",
                        "type": "integer",
                        "format": "int64"
                    },
                    "tsat": {
                        "description": "Tsat property",
                        "type": "string",
                        "format": "date-time",
                        "example": "YYYY-MM-DD HH:MM:SS"
                    },
                    "reason": {
                        "description": "Reason property",
                        "type": "string"
                    },
                    "init": {
                        "description": "Init property",
                        "type": "bool"
                    },
                    "tsatable_id": {
                        "description": "Tsatable id property",
                        "type": "integer",
                        "format": "int64"
                    },
                    "tsatable_type": {
                        "description": "Tsatable type property",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "TtotEloquent": {
                "title": "Ttot Eloquent",
                "description": "Ttot eloquent schema",
                "properties": {
                    "id": {
                        "description": "Id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "departure_id": {
                        "description": "Departure id property",
                        "type": "integer",
                        "format": "int64"
                    },
                    "ttot": {
                        "description": "Ttot property",
                        "type": "string",
                        "format": "date-time",
                        "example": "YYYY-MM-DD HH:MM:SS"
                    },
                    "reason": {
                        "description": "Reason property",
                        "type": "string"
                    },
                    "init": {
                        "description": "Init property",
                        "type": "bool"
                    },
                    "ttotable_id": {
                        "description": "Ttotable id property",
                        "type": "integer",
                        "format": "int64"
                    },
                    "ttotable_type": {
                        "description": "Ttotable type property",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "AirlineEloquent": {
                "title": "Airline Eloquent",
                "description": "Airline eloquent schema",
                "required": [
                    "name",
                    "slug"
                ],
                "properties": {
                    "id": {
                        "description": "Id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "flight_number": {
                        "description": "Flight number property",
                        "type": "string"
                    },
                    "name": {
                        "description": "Name property",
                        "type": "string"
                    },
                    "slug": {
                        "description": "Slug property",
                        "type": "string"
                    },
                    "icao": {
                        "description": "Icao property",
                        "type": "string"
                    },
                    "iata": {
                        "description": "Iata property",
                        "type": "string"
                    },
                    "call_sign": {
                        "description": "Call sign property",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "AirportEloquent": {
                "title": "Airport Eloquent",
                "description": "Airport eloquent schema",
                "required": [
                    "name",
                    "slug"
                ],
                "properties": {
                    "id": {
                        "description": "Id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "description": "Name property",
                        "type": "string"
                    },
                    "slug": {
                        "description": "Slug property",
                        "type": "string"
                    },
                    "location": {
                        "description": "Location property",
                        "type": "string"
                    },
                    "country": {
                        "description": "Country property",
                        "type": "string"
                    },
                    "icao": {
                        "description": "Icao property",
                        "type": "string"
                    },
                    "iata": {
                        "description": "Iata property",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CountryEloquent": {
                "title": "Country Eloquent",
                "description": "Country eloquent schema",
                "required": [
                    "name",
                    "slug"
                ],
                "properties": {
                    "id": {
                        "description": "Id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "description": "Name property",
                        "type": "string"
                    },
                    "slug": {
                        "description": "Slug property",
                        "type": "string"
                    },
                    "calling_code": {
                        "description": "Calling code property",
                        "type": "string"
                    },
                    "iso_code_two_digit": {
                        "description": "ISO code two digit property",
                        "type": "string"
                    },
                    "iso_code_three_digit": {
                        "description": "ISO code three digit property",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "OrganizationEloquent": {
                "title": "Organization Eloquent",
                "description": "Organization eloquent schema",
                "required": [
                    "name",
                    "slug",
                    "country_id"
                ],
                "properties": {
                    "id": {
                        "description": "Id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "description": "Name property",
                        "type": "string"
                    },
                    "slug": {
                        "description": "Slug property",
                        "type": "string"
                    },
                    "country_id": {
                        "description": "Country id property",
                        "type": "integer",
                        "format": "int64"
                    },
                    "description": {
                        "description": "Description property",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "VendorEloquent": {
                "title": "Vendor Eloquent",
                "description": "Vendor eloquent schema",
                "required": [
                    "name",
                    "slug"
                ],
                "properties": {
                    "role_id": {
                        "description": "Role id property",
                        "type": "integer",
                        "format": "int32"
                    },
                    "organization_id": {
                        "description": "Organization id property",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "description": "Name property",
                        "type": "string"
                    },
                    "slug": {
                        "description": "Slug property",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "MediaEloquent": {
                "title": "Media Eloquent",
                "description": "Media eloquent schema",
                "required": [
                    "user_id",
                    "collection",
                    "original_name",
                    "generate_name"
                ],
                "properties": {
                    "id": {
                        "description": "Id property",
                        "type": "string"
                    },
                    "user_id": {
                        "description": "User id property",
                        "type": "int64"
                    },
                    "collection": {
                        "description": "Collection property",
                        "type": "string"
                    },
                    "original_name": {
                        "description": "Original name property",
                        "type": "string"
                    },
                    "generate_name": {
                        "description": "Generate name property",
                        "type": "string"
                    },
                    "extension": {
                        "description": "Extension property",
                        "type": "string"
                    },
                    "mime_type": {
                        "description": "Mime type property",
                        "type": "string"
                    },
                    "path": {
                        "description": "Path property",
                        "type": "string"
                    },
                    "url": {
                        "description": "Url property",
                        "type": "string"
                    },
                    "width": {
                        "description": "Width property",
                        "type": "int32"
                    },
                    "height": {
                        "description": "Height property",
                        "type": "int32"
                    },
                    "size": {
                        "description": "Size property",
                        "type": "int32"
                    }
                },
                "type": "object"
            },
            "ProfileEloquent": {
                "title": "Profile Eloquent",
                "description": "Profile eloquent schema",
                "required": [
                    "profileable_id",
                    "profileable_type",
                    "email",
                    "password"
                ],
                "properties": {
                    "profileable_id": {
                        "description": "Profileable id property",
                        "type": "integer",
                        "format": "int64"
                    },
                    "profileable_type": {
                        "description": "Profileable type property",
                        "type": "string"
                    },
                    "full_name": {
                        "description": "Full name property",
                        "type": "string"
                    },
                    "nick_name": {
                        "description": "Nick name property",
                        "type": "string"
                    },
                    "country": {
                        "description": "Country property",
                        "type": "string"
                    },
                    "state": {
                        "description": "State property",
                        "type": "string"
                    },
                    "city": {
                        "description": "City property",
                        "type": "string"
                    },
                    "address": {
                        "description": "Address property",
                        "type": "string"
                    },
                    "postcode": {
                        "description": "Postcode property",
                        "type": "string"
                    },
                    "gender": {
                        "description": "Gender property",
                        "type": "string"
                    },
                    "birth_date": {
                        "description": "Birth date property",
                        "type": "string",
                        "format": "date-time"
                    },
                    "mobile": {
                        "description": "Mobile property",
                        "type": "string"
                    },
                    "email": {
                        "description": "Email property",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UserEloquent": {
                "title": "User Eloquent",
                "description": "User eloquent schema",
                "required": [
                    "username",
                    "email",
                    "password"
                ],
                "properties": {
                    "username": {
                        "description": "Username property",
                        "type": "string"
                    },
                    "email": {
                        "description": "Email property",
                        "type": "string"
                    },
                    "password": {
                        "description": "Password property",
                        "type": "string"
                    },
                    "status": {
                        "description": "Status property",
                        "type": "array",
                        "items": {
                            "example": [
                                "PENDING",
                                "ACTIVE",
                                "DISABLE",
                                "BLOCK"
                            ]
                        }
                    }
                },
                "type": "object"
            },
            "AccessEloquent": {
                "title": "Access Eloquent",
                "description": "Access eloquent schema",
                "required": [
                    "name",
                    "slug"
                ],
                "properties": {
                    "name": {
                        "description": "Name property",
                        "type": "string"
                    },
                    "slug": {
                        "description": "Slug property",
                        "type": "string"
                    },
                    "description": {
                        "description": "Description property",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "GroupEloquent": {
                "title": "Group Eloquent",
                "description": "Group eloquent schema",
                "required": [
                    "name",
                    "slug"
                ],
                "properties": {
                    "name": {
                        "description": "Name property",
                        "type": "string"
                    },
                    "slug": {
                        "description": "Slug property",
                        "type": "string"
                    },
                    "description": {
                        "description": "Description property",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "PermissionEloquent": {
                "title": "Permission Eloquent",
                "description": "Permission eloquent schema",
                "required": [
                    "name",
                    "slug",
                    "server",
                    "path"
                ],
                "properties": {
                    "name": {
                        "description": "Name property",
                        "type": "string"
                    },
                    "slug": {
                        "description": "Slug property",
                        "type": "string"
                    },
                    "server": {
                        "description": "Server property",
                        "type": "string"
                    },
                    "path": {
                        "description": "Path property",
                        "type": "string"
                    },
                    "description": {
                        "description": "Description property",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "PermissionAccessResponse": {
                "title": "Permission access Response",
                "description": "Permission access response schema",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/IdentityAuditableRequest"
                    },
                    {
                        "$ref": "#/components/schemas/PermissionEloquent"
                    },
                    {
                        "properties": {
                            "accesses": {
                                "type": "array",
                                "items": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/IdentityAuditableRequest"
                                        },
                                        {
                                            "$ref": "#/components/schemas/AccessEloquent"
                                        }
                                    ]
                                }
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "RoleEloquent": {
                "title": "Role Eloquent",
                "description": "Role eloquent schema",
                "required": [
                    "group_id",
                    "name",
                    "slug"
                ],
                "properties": {
                    "group_id": {
                        "description": "Group id property",
                        "type": "integer",
                        "format": "int32"
                    },
                    "name": {
                        "description": "Name property",
                        "type": "string"
                    },
                    "slug": {
                        "description": "Slug property",
                        "type": "string"
                    },
                    "description": {
                        "description": "Description property",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "RolePermissionResponse": {
                "title": "Role Permission Response",
                "description": "Role permission response schema",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/RoleEloquent"
                    },
                    {
                        "properties": {
                            "permissions": {
                                "type": "array",
                                "items": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/IdentityAuditableRequest"
                                        },
                                        {
                                            "$ref": "#/components/schemas/PermissionEloquent"
                                        }
                                    ]
                                }
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "GetBasicSuccessJson": {
                "title": "Get Basic Success Json",
                "description": "Get basic success json schema",
                "properties": {
                    "isSuccess": {
                        "description": "is success property",
                        "type": "boolean"
                    },
                    "messages": {
                        "description": "messages property",
                        "type": "array",
                        "items": {}
                    }
                },
                "type": "object"
            },
            "GetBasicSuccessWithStringJson": {
                "title": "Get Basic Success With String Json",
                "description": "Get basic success with string json schema",
                "properties": {
                    "isSuccess": {
                        "description": "is success property",
                        "type": "boolean"
                    },
                    "message": {
                        "description": "message property",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "GetBasicSuccessWithDataJson": {
                "title": "Get Basic Success With Data Json",
                "description": "Get basic success with data json schema",
                "properties": {
                    "isSuccess": {
                        "description": "is success property",
                        "type": "boolean"
                    },
                    "messages": {
                        "description": "messages property",
                        "type": "array",
                        "items": {}
                    }
                },
                "type": "object",
                "oneOf": [
                    {
                        "property": "data",
                        "description": "data property",
                        "type": "object"
                    },
                    {
                        "property": "data",
                        "description": "data property",
                        "type": "array",
                        "items": {}
                    }
                ]
            },
            "GetBasicSuccessWithStringDataJson": {
                "title": "Get Basic Success With String Data Json",
                "description": "Get basic success with string data json schema",
                "properties": {
                    "isSuccess": {
                        "description": "is success property",
                        "type": "boolean"
                    },
                    "message": {
                        "description": "message property",
                        "type": "string"
                    }
                },
                "type": "object",
                "oneOf": [
                    {
                        "property": "data",
                        "description": "data property",
                        "type": "object"
                    },
                    {
                        "property": "data",
                        "description": "data property",
                        "type": "array",
                        "items": {}
                    }
                ]
            },
            "GetBasicErrorJson": {
                "title": "Get Basic Error Json",
                "description": "Get basic error json schema",
                "properties": {
                    "isSuccess": {
                        "description": "is success property",
                        "type": "boolean",
                        "example": false
                    },
                    "messages": {
                        "description": "messages property",
                        "type": "array",
                        "items": {},
                        "example": []
                    }
                },
                "type": "object"
            },
            "GetBasicErrorWithStringJson": {
                "title": "Get Basic Error With String Json",
                "description": "Get basic error with string json schema",
                "properties": {
                    "isSuccess": {
                        "description": "is error property",
                        "type": "boolean",
                        "example": false
                    },
                    "message": {
                        "description": "message property",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "GetBasicErrorWithDataJson": {
                "title": "Get Basic Error With Data Json",
                "description": "Get basic error with data json schema",
                "properties": {
                    "isSuccess": {
                        "description": "is error property",
                        "type": "boolean",
                        "example": false
                    },
                    "messages": {
                        "description": "messages property",
                        "type": "array",
                        "items": {}
                    }
                },
                "type": "object",
                "oneOf": [
                    {
                        "property": "data",
                        "description": "data property",
                        "type": "object"
                    },
                    {
                        "property": "data",
                        "description": "data property",
                        "type": "array",
                        "items": {}
                    }
                ]
            },
            "GetBasicErrorWithStringDataJson": {
                "title": "Get Basic Error With String Data Json",
                "description": "Get basic error with string data json schema",
                "properties": {
                    "isSuccess": {
                        "description": "is success property",
                        "type": "boolean",
                        "example": false
                    },
                    "message": {
                        "description": "message property",
                        "type": "string"
                    }
                },
                "type": "object",
                "oneOf": [
                    {
                        "property": "data",
                        "description": "data property",
                        "type": "object"
                    },
                    {
                        "property": "data",
                        "description": "data property",
                        "type": "array",
                        "items": {}
                    }
                ]
            },
            "ListSearchParameter": {
                "title": "List Search Parameter",
                "description": "List search parameter schema",
                "properties": {
                    "search": {
                        "description": "Search property",
                        "type": "string"
                    },
                    "sort": {
                        "description": "Sort property",
                        "properties": {
                            "order": {
                                "description": "Order property",
                                "type": "string",
                                "example": "DESC"
                            },
                            "column": {
                                "description": "Column property",
                                "type": "string",
                                "example": "id"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "PageSearchParameter": {
                "title": "Page Search Parameter",
                "description": "Page search parameter schema",
                "properties": {
                    "search": {
                        "description": "Search property",
                        "type": "string"
                    },
                    "pagination": {
                        "description": "Pagination property",
                        "properties": {
                            "page": {
                                "description": "Page property",
                                "type": "integer",
                                "format": "int32",
                                "example": 1
                            },
                            "length": {
                                "description": "Length property",
                                "type": "integer",
                                "format": "int32",
                                "example": 10
                            }
                        },
                        "type": "object"
                    },
                    "sort": {
                        "description": "Sort property",
                        "properties": {
                            "order": {
                                "description": "Order property",
                                "type": "string",
                                "example": "DESC"
                            },
                            "column": {
                                "description": "Column property",
                                "type": "string",
                                "example": "id"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "GenericListSearchJsonResponse": {
                "title": "Generic List Search Json Response",
                "description": "Generic list search json response schema",
                "properties": {
                    "meta": {
                        "description": "Meta property",
                        "properties": {
                            "total": {
                                "type": "integer",
                                "format": "int32"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "GenericPageSearchJsonResponse": {
                "title": "Generic Page Search Json Response",
                "description": "Generic page search json response schema",
                "properties": {
                    "meta": {
                        "description": "Meta property",
                        "properties": {
                            "page": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "length": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "pages": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "total": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "order": {
                                "type": "string",
                                "example": "column"
                            },
                            "column": {
                                "type": "string",
                                "example": "ASC"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "GenericUnauthenticatedJsonResponse": {
                "title": "Generic Unauthenticated Json Response",
                "description": "Generic unauthenticated json response schema",
                "properties": {
                    "error": {
                        "type": "string"
                    },
                    "error_description": {
                        "type": "string"
                    },
                    "hint": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "LoginRequest": {
                "title": "Login Request",
                "description": "Login request schema",
                "required": [
                    "identity",
                    "password"
                ],
                "properties": {
                    "identity": {
                        "description": "Identity property",
                        "type": "string"
                    },
                    "password": {
                        "description": "Password property",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "LogoutRequest": {
                "title": "Logout Request",
                "description": "Logout request schema",
                "required": [
                    "id"
                ],
                "properties": {
                    "id": {
                        "description": "Id property",
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "type": "object"
            },
            "CreateDepartureMetaRequest": {
                "title": "Create Departure Meta Request",
                "description": "Create departure meta request schema",
                "required": [
                    "flight",
                    "sobt",
                    "eobt",
                    "tobt",
                    "aegt",
                    "ardt",
                    "aobt",
                    "tsat",
                    "ttot",
                    "atot"
                ],
                "properties": {
                    "flight": {
                        "description": "Flight property",
                        "type": "object",
                        "example": "{\"priority\":{\"icon\":null,\"type\":null,\"blink\":null},\"tickmark\":{\"icon\":null,\"blink\":null,\"color\":null},\"acknowledge\":false}"
                    },
                    "sobt": {
                        "description": "Sobt property",
                        "type": "object",
                        "example": "{\"tickmark\":{\"icon\":null,\"blink\":null,\"color\":null}}"
                    },
                    "eobt": {
                        "description": "Eobt property",
                        "type": "object",
                        "example": "{\"tickmark\":{\"icon\":null,\"blink\":null,\"color\":null}}"
                    },
                    "tobt": {
                        "description": "Tobt property",
                        "type": "object",
                        "example": "{\"tickmark\":{\"icon\":null,\"blink\":null,\"color\":null}}"
                    },
                    "aegt": {
                        "description": "Aegt property",
                        "type": "object",
                        "example": "{\"tickmark\":{\"icon\":null,\"blink\":null,\"color\":null}}"
                    },
                    "ardt": {
                        "description": "Ardt property",
                        "type": "object",
                        "example": "{\"tickmark\":{\"icon\":null,\"blink\":null,\"color\":null}}"
                    },
                    "aobt": {
                        "description": "Aobt property",
                        "type": "object",
                        "example": "{\"tickmark\":{\"icon\":null,\"blink\":null,\"color\":null}}"
                    },
                    "tsat": {
                        "description": "Tsat property",
                        "type": "object",
                        "example": "{\"tickmark\":{\"icon\":null,\"blink\":null,\"color\":null}}"
                    },
                    "ttot": {
                        "description": "Ttot property",
                        "type": "object",
                        "example": "{\"tickmark\":{\"icon\":null,\"blink\":null,\"color\":null}}"
                    },
                    "atot": {
                        "description": "Atot property",
                        "type": "object",
                        "example": "{\"tickmark\":{\"icon\":null,\"blink\":null,\"color\":null}}"
                    }
                },
                "type": "object"
            },
            "CreateDepartureRequest": {
                "title": "Create Departure Request",
                "description": "Create departure request schema",
                "required": [
                    "aodb_id",
                    "airport_id",
                    "departure_meta"
                ],
                "properties": {
                    "aodb_id": {
                        "description": "Aodb id property",
                        "type": "integer",
                        "format": "int64"
                    },
                    "airport_id": {
                        "description": "Airport id property",
                        "type": "integer",
                        "format": "int64"
                    },
                    "flight_number": {
                        "description": "Flight number property",
                        "type": "string"
                    },
                    "flight_numberable_id": {
                        "description": "Flight numberable id property",
                        "type": "integer",
                        "format": "int32"
                    },
                    "flight_numberable_type": {
                        "description": "Flight numberable type property",
                        "type": "string"
                    },
                    "call_sign": {
                        "description": "Call sign property",
                        "type": "string"
                    },
                    "nature": {
                        "description": "Nature property",
                        "type": "string"
                    },
                    "natureable_id": {
                        "description": "Natureable id property",
                        "type": "integer",
                        "format": "int32"
                    },
                    "natureable_type": {
                        "description": "Natureable type property",
                        "type": "string"
                    },
                    "acft": {
                        "description": "Acft property",
                        "type": "string"
                    },
                    "acftable_id": {
                        "description": "Acftable id property",
                        "type": "integer",
                        "format": "int32"
                    },
                    "acftable_type": {
                        "description": "Acftable type property",
                        "type": "string"
                    },
                    "register": {
                        "description": "Register property",
                        "type": "string"
                    },
                    "registerable_id": {
                        "description": "Registerable id property",
                        "type": "integer",
                        "format": "int32"
                    },
                    "registerable_type": {
                        "description": "Registerable type property",
                        "type": "string"
                    },
                    "stand": {
                        "description": "Stand property",
                        "type": "string"
                    },
                    "standable_id": {
                        "description": "Standable id property",
                        "type": "integer",
                        "format": "int32"
                    },
                    "standable_type": {
                        "description": "Standable type property",
                        "type": "string"
                    },
                    "gate_name": {
                        "description": "Gate name property",
                        "type": "string"
                    },
                    "gate_nameable_id": {
                        "description": "Gate nameable id property",
                        "type": "integer",
                        "format": "int32"
                    },
                    "gate_nameable_type": {
                        "description": "Gate nameable type property",
                        "type": "string"
                    },
                    "gate_open": {
                        "description": "Gate open property",
                        "type": "string"
                    },
                    "gate_openable_id": {
                        "description": "Gate openable id property",
                        "type": "integer",
                        "format": "int32"
                    },
                    "gate_openable_type": {
                        "description": "Gate openable type property",
                        "type": "string"
                    },
                    "runway_actual": {
                        "description": "Runway actual property",
                        "type": "string"
                    },
                    "runway_actualable_id": {
                        "description": "Runway actualable id property",
                        "type": "integer",
                        "format": "int32"
                    },
                    "runway_actualable_type": {
                        "description": "Runway actualable type property",
                        "type": "string"
                    },
                    "runway_estimated": {
                        "description": "Runway estimated property",
                        "type": "string"
                    },
                    "runway_estimatedable_id": {
                        "description": "Runway estimatedable id property",
                        "type": "integer",
                        "format": "int32"
                    },
                    "runway_estimatedable_type": {
                        "description": "Runway estimatedable type property",
                        "type": "string"
                    },
                    "transit": {
                        "description": "Transit property",
                        "type": "string"
                    },
                    "transitable_id": {
                        "description": "Transitable id property",
                        "type": "integer",
                        "format": "int32"
                    },
                    "transitable_type": {
                        "description": "Transitable type property",
                        "type": "string"
                    },
                    "destination": {
                        "description": "Destination property",
                        "type": "string"
                    },
                    "destinationable_id": {
                        "description": "Destinationable id property",
                        "type": "integer",
                        "format": "int32"
                    },
                    "destinationable_type": {
                        "description": "Destinationable type property",
                        "type": "string"
                    },
                    "status": {
                        "description": "Status property",
                        "type": "string"
                    },
                    "code_share": {
                        "description": "Code share property",
                        "type": "string"
                    },
                    "data_origin": {
                        "description": "Data origin property",
                        "type": "string"
                    },
                    "data_originable_id": {
                        "description": "Data originable id property",
                        "type": "integer",
                        "format": "int32"
                    },
                    "data_originable_type": {
                        "description": "Data originable type property",
                        "type": "string"
                    },
                    "acgts": {
                        "description": "Acgt property",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AcgtCreateRequest"
                        }
                    },
                    "aczts": {
                        "description": "Aczt property",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AcztCreateRequest"
                        }
                    },
                    "adits": {
                        "description": "Adit property",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AditCreateRequest"
                        }
                    },
                    "aegts": {
                        "description": "Aegt property",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AegtCreateRequest"
                        }
                    },
                    "aezts": {
                        "description": "Aezt property",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AeztCreateRequest"
                        }
                    },
                    "aghts": {
                        "description": "Aght property",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AghtCreateRequest"
                        }
                    },
                    "aobts": {
                        "description": "Aobt property",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AobtCreateRequest"
                        }
                    },
                    "ardts": {
                        "description": "Ardt property",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ArdtCreateRequest"
                        }
                    },
                    "arzts": {
                        "description": "Arzt property",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ArztCreateRequest"
                        }
                    },
                    "azats": {
                        "description": "Azat property",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AzatCreateRequest"
                        }
                    },
                    "asbts": {
                        "description": "Asbt property",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AsbtCreateRequest"
                        }
                    },
                    "asrts": {
                        "description": "Asrt property",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AsrtCreateRequest"
                        }
                    },
                    "atets": {
                        "description": "Atet property",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AtetCreateRequest"
                        }
                    },
                    "atsts": {
                        "description": "Atst property",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AtstCreateRequest"
                        }
                    },
                    "atots": {
                        "description": "Atot property",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AtotCreateRequest"
                        }
                    },
                    "attts": {
                        "description": "Attt property",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AtttCreateRequest"
                        }
                    },
                    "axots": {
                        "description": "Axot property",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AxotCreateRequest"
                        }
                    },
                    "ctots": {
                        "description": "Ctot property",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CtotCreateRequest"
                        }
                    },
                    "eczts": {
                        "description": "Eczt property",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EcztCreateRequest"
                        }
                    },
                    "edits": {
                        "description": "Edit property",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EditCreateRequest"
                        }
                    },
                    "eezts": {
                        "description": "Eezt property",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EeztCreateRequest"
                        }
                    },
                    "eobts": {
                        "description": "Eobt property",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EobtCreateRequest"
                        }
                    },
                    "erzts": {
                        "description": "Erzt property",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ErztCreateRequest"
                        }
                    },
                    "etots": {
                        "description": "Etot property",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EtotCreateRequest"
                        }
                    },
                    "exots": {
                        "description": "Exot property",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ExotCreateRequest"
                        }
                    },
                    "sobts": {
                        "description": "Sobt property",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SobtCreateRequest"
                        }
                    },
                    "stets": {
                        "description": "Stet property",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/StetCreateRequest"
                        }
                    },
                    "ststs": {
                        "description": "Stst property",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/StstCreateRequest"
                        }
                    },
                    "tobts": {
                        "description": "Tobt property",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TobtCreateRequest"
                        }
                    },
                    "tsats": {
                        "description": "Tsat property",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TsatCreateRequest"
                        }
                    },
                    "ttots": {
                        "description": "Ttot property",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TtotCreateRequest"
                        }
                    },
                    "departure_meta": {
                        "$ref": "#/components/schemas/CreateDepartureMetaRequest"
                    }
                },
                "type": "object"
            },
            "CreateFlightInformationRequest": {
                "title": "Create Flight Information Request",
                "description": "Create flight information request schema",
                "required": [
                    "departure_id",
                    "type",
                    "role_id"
                ],
                "properties": {
                    "departure_id": {
                        "description": "Departure id property",
                        "type": "integer",
                        "format": "int64"
                    },
                    "type": {
                        "description": "Type property",
                        "type": "string",
                        "example": "PRIORITY"
                    },
                    "reason": {
                        "description": "Reason property",
                        "type": "string"
                    },
                    "role_id": {
                        "description": "Role id property",
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "type": "object"
            },
            "UpdateDepartureMetaRequest": {
                "title": "Update Departure Meta Request",
                "description": "Update departure meta request schema",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/IdentityAuditableRequest"
                    },
                    {
                        "required": [
                            "id",
                            "flight",
                            "sobt",
                            "eobt",
                            "tobt",
                            "aegt",
                            "ardt",
                            "aobt",
                            "tsat",
                            "ttot",
                            "atot"
                        ],
                        "properties": {
                            "id": {
                                "description": "Id property",
                                "type": "integer",
                                "format": "int64"
                            },
                            "flight": {
                                "description": "Flight property",
                                "type": "object",
                                "example": "{\"priority\":{\"icon\":null,\"type\":null,\"blink\":null},\"tickmark\":{\"icon\":null,\"blink\":null,\"color\":null},\"acknowledge\":false}"
                            },
                            "sobt": {
                                "description": "Sobt property",
                                "type": "object",
                                "example": "{\"tickmark\":{\"icon\":null,\"blink\":null,\"color\":null}}"
                            },
                            "eobt": {
                                "description": "Eobt property",
                                "type": "object",
                                "example": "{\"tickmark\":{\"icon\":null,\"blink\":null,\"color\":null}}"
                            },
                            "tobt": {
                                "description": "Tobt property",
                                "type": "object",
                                "example": "{\"tickmark\":{\"icon\":null,\"blink\":null,\"color\":null}}"
                            },
                            "aegt": {
                                "description": "Aegt property",
                                "type": "object",
                                "example": "{\"tickmark\":{\"icon\":null,\"blink\":null,\"color\":null}}"
                            },
                            "ardt": {
                                "description": "Ardt property",
                                "type": "object",
                                "example": "{\"tickmark\":{\"icon\":null,\"blink\":null,\"color\":null}}"
                            },
                            "aobt": {
                                "description": "Aobt property",
                                "type": "object",
                                "example": "{\"tickmark\":{\"icon\":null,\"blink\":null,\"color\":null}}"
                            },
                            "tsat": {
                                "description": "Tsat property",
                                "type": "object",
                                "example": "{\"tickmark\":{\"icon\":null,\"blink\":null,\"color\":null}}"
                            },
                            "ttot": {
                                "description": "Ttot property",
                                "type": "object",
                                "example": "{\"tickmark\":{\"icon\":null,\"blink\":null,\"color\":null}}"
                            },
                            "atot": {
                                "description": "Atot property",
                                "type": "object",
                                "example": "{\"tickmark\":{\"icon\":null,\"blink\":null,\"color\":null}}"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "DepartureIdRequest": {
                "title": "Departure Id Request",
                "description": "Departure id request schema",
                "required": [
                    "id"
                ],
                "properties": {
                    "id": {
                        "description": "Departure id property",
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "type": "object"
            },
            "DepartureAodbIdRequest": {
                "title": "Departure aodb id Request",
                "description": "Departure aodb id request schema",
                "required": [
                    "aodb_id"
                ],
                "properties": {
                    "aodb_id": {
                        "description": "Departure aodb id property",
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "type": "object"
            },
            "UpdateDepartureRequest": {
                "title": "Update Departure Request",
                "description": "Update departure request schema",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/IdentityAuditableRequest"
                    },
                    {
                        "required": [
                            "airport_id"
                        ],
                        "properties": {
                            "airport_id": {
                                "description": "Airport id property",
                                "type": "integer",
                                "format": "int64"
                            },
                            "flight_number": {
                                "description": "Flight number property",
                                "type": "string"
                            },
                            "flight_numberable_id": {
                                "description": "Flight numberable id property",
                                "type": "integer",
                                "format": "int32"
                            },
                            "flight_numberable_type": {
                                "description": "Flight numberable type property",
                                "type": "string"
                            },
                            "call_sign": {
                                "description": "Call sign property",
                                "type": "string"
                            },
                            "nature": {
                                "description": "Nature property",
                                "type": "string"
                            },
                            "natureable_id": {
                                "description": "Natureable id property",
                                "type": "integer",
                                "format": "int32"
                            },
                            "natureable_type": {
                                "description": "Natureable type property",
                                "type": "string"
                            },
                            "acft": {
                                "description": "Acft property",
                                "type": "string"
                            },
                            "acftable_id": {
                                "description": "Acftable id property",
                                "type": "integer",
                                "format": "int32"
                            },
                            "acftable_type": {
                                "description": "Acftable type property",
                                "type": "string"
                            },
                            "register": {
                                "description": "Register property",
                                "type": "string"
                            },
                            "registerable_id": {
                                "description": "Registerable id property",
                                "type": "integer",
                                "format": "int32"
                            },
                            "registerable_type": {
                                "description": "Registerable type property",
                                "type": "string"
                            },
                            "stand": {
                                "description": "Stand property",
                                "type": "string"
                            },
                            "standable_id": {
                                "description": "Standable id property",
                                "type": "integer",
                                "format": "int32"
                            },
                            "standable_type": {
                                "description": "Standable type property",
                                "type": "string"
                            },
                            "gate_name": {
                                "description": "Gate name property",
                                "type": "string"
                            },
                            "gate_nameable_id": {
                                "description": "Gate nameable id property",
                                "type": "integer",
                                "format": "int32"
                            },
                            "gate_nameable_type": {
                                "description": "Gate nameable type property",
                                "type": "string"
                            },
                            "gate_open": {
                                "description": "Gate open property",
                                "type": "string"
                            },
                            "gate_openable_id": {
                                "description": "Gate openable id property",
                                "type": "integer",
                                "format": "int32"
                            },
                            "gate_openable_type": {
                                "description": "Gate openable type property",
                                "type": "string"
                            },
                            "runway_actual": {
                                "description": "Runway actual property",
                                "type": "string"
                            },
                            "runway_actualable_id": {
                                "description": "Runway actualable id property",
                                "type": "integer",
                                "format": "int32"
                            },
                            "runway_actualable_type": {
                                "description": "Runway actualable type property",
                                "type": "string"
                            },
                            "runway_estimated": {
                                "description": "Runway estimated property",
                                "type": "string"
                            },
                            "runway_estimatedable_id": {
                                "description": "Runway estimatedable id property",
                                "type": "integer",
                                "format": "int32"
                            },
                            "runway_estimatedable_type": {
                                "description": "Runway estimatedable type property",
                                "type": "string"
                            },
                            "transit": {
                                "description": "Transit property",
                                "type": "string"
                            },
                            "transitable_id": {
                                "description": "Transitable id property",
                                "type": "integer",
                                "format": "int32"
                            },
                            "transitable_type": {
                                "description": "Transitable type property",
                                "type": "string"
                            },
                            "destination": {
                                "description": "Destination property",
                                "type": "string"
                            },
                            "destinationable_id": {
                                "description": "Destinationable id property",
                                "type": "integer",
                                "format": "int32"
                            },
                            "destinationable_type": {
                                "description": "Destinationable type property",
                                "type": "string"
                            },
                            "status": {
                                "description": "Status property",
                                "type": "string"
                            },
                            "code_share": {
                                "description": "Code share property",
                                "type": "string"
                            },
                            "data_origin": {
                                "description": "Data origin property",
                                "type": "string"
                            },
                            "data_originable_id": {
                                "description": "Data originable id property",
                                "type": "integer",
                                "format": "int32"
                            },
                            "data_originable_type": {
                                "description": "Data originable type property",
                                "type": "string"
                            },
                            "acgts": {
                                "description": "Acgt property",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/AcgtCreateRequest"
                                }
                            },
                            "aczts": {
                                "description": "Aczt property",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/AcztCreateRequest"
                                }
                            },
                            "adits": {
                                "description": "Adit property",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/AditCreateRequest"
                                }
                            },
                            "aegts": {
                                "description": "Aegt property",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/AegtCreateRequest"
                                }
                            },
                            "aezts": {
                                "description": "Aezt property",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/AeztCreateRequest"
                                }
                            },
                            "aghts": {
                                "description": "Aght property",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/AghtCreateRequest"
                                }
                            },
                            "aobts": {
                                "description": "Aobt property",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/AobtCreateRequest"
                                }
                            },
                            "ardts": {
                                "description": "Ardt property",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ArdtCreateRequest"
                                }
                            },
                            "arzts": {
                                "description": "Arzt property",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ArztCreateRequest"
                                }
                            },
                            "azats": {
                                "description": "Azat property",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/AzatCreateRequest"
                                }
                            },
                            "asbts": {
                                "description": "Asbt property",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/AsbtCreateRequest"
                                }
                            },
                            "asrts": {
                                "description": "Asrt property",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/AsrtCreateRequest"
                                }
                            },
                            "atets": {
                                "description": "Atet property",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/AtetCreateRequest"
                                }
                            },
                            "atsts": {
                                "description": "Atst property",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/AtstCreateRequest"
                                }
                            },
                            "atots": {
                                "description": "Atot property",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/AtotCreateRequest"
                                }
                            },
                            "attts": {
                                "description": "Attt property",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/AtttCreateRequest"
                                }
                            },
                            "axots": {
                                "description": "Axot property",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/AxotCreateRequest"
                                }
                            },
                            "ctots": {
                                "description": "Ctot property",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CtotCreateRequest"
                                }
                            },
                            "eczts": {
                                "description": "Eczt property",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/EcztCreateRequest"
                                }
                            },
                            "edits": {
                                "description": "Edit property",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/EditCreateRequest"
                                }
                            },
                            "eezts": {
                                "description": "Eezt property",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/EeztCreateRequest"
                                }
                            },
                            "eobts": {
                                "description": "Eobt property",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/EobtCreateRequest"
                                }
                            },
                            "erzts": {
                                "description": "Erzt property",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ErztCreateRequest"
                                }
                            },
                            "etots": {
                                "description": "Etot property",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/EtotCreateRequest"
                                }
                            },
                            "exots": {
                                "description": "Exot property",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ExotCreateRequest"
                                }
                            },
                            "sobts": {
                                "description": "Sobt property",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/SobtCreateRequest"
                                }
                            },
                            "stets": {
                                "description": "Stet property",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/StetCreateRequest"
                                }
                            },
                            "ststs": {
                                "description": "Stst property",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/StstCreateRequest"
                                }
                            },
                            "tobts": {
                                "description": "Tobt property",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/TobtCreateRequest"
                                }
                            },
                            "tsats": {
                                "description": "Tsat property",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/TsatCreateRequest"
                                }
                            },
                            "ttots": {
                                "description": "Ttot property",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/TtotCreateRequest"
                                }
                            },
                            "departure_meta": {
                                "$ref": "#/components/schemas/CreateDepartureMetaRequest"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "UpdateFlightInformationRequest": {
                "title": "Update Flight Information Request",
                "description": "Update flight information request schema",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/IdentityAuditableRequest"
                    },
                    {
                        "required": [
                            "id",
                            "departure_id",
                            "type",
                            "role_id"
                        ],
                        "properties": {
                            "id": {
                                "description": "Id property",
                                "type": "integer",
                                "format": "int64"
                            },
                            "departure_id": {
                                "description": "Departure id property",
                                "type": "integer",
                                "format": "int64"
                            },
                            "type": {
                                "description": "Type property",
                                "type": "string",
                                "example": "PRIORITY"
                            },
                            "reason": {
                                "description": "Reason property",
                                "type": "string"
                            },
                            "role_id": {
                                "description": "Role id property",
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "CreateElementRequest": {
                "title": "Create Element Request",
                "description": "Create element request schema",
                "required": [
                    "departure_id",
                    "role_initialize_id",
                    "role_origin_id"
                ],
                "properties": {
                    "reason": {
                        "description": "Reason property",
                        "type": "string"
                    },
                    "init": {
                        "description": "Init property",
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "AcgtCreateRequest": {
                "title": "Acgt Create Request",
                "description": "Acgt create request schema",
                "required": [
                    "departure_id",
                    "acgt",
                    "init",
                    "acgtable_id",
                    "acgtable_type"
                ],
                "allOf": [
                    {
                        "properties": {
                            "acgt": {
                                "description": "Acgt property",
                                "type": "string",
                                "format": "date-time",
                                "example": "YYYY-MM-DD HH:MM:SS"
                            },
                            "acgtable_id": {
                                "description": "Acgtable id property",
                                "type": "integer",
                                "format": "int64"
                            },
                            "acgtable_type": {
                                "description": "Acgtable type property",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/CreateElementRequest"
                    }
                ]
            },
            "AcztCreateRequest": {
                "title": "Aczt Create Request",
                "description": "Aczt create request schema",
                "required": [
                    "departure_id",
                    "aczt",
                    "init",
                    "acztable_id",
                    "acztable_type"
                ],
                "allOf": [
                    {
                        "properties": {
                            "aczt": {
                                "description": "Aczt property",
                                "type": "string",
                                "format": "date-time",
                                "example": "YYYY-MM-DD HH:MM:SS"
                            },
                            "acztable_id": {
                                "description": "Acztable id property",
                                "type": "integer",
                                "format": "int64"
                            },
                            "acztable_type": {
                                "description": "Acztable type property",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/CreateElementRequest"
                    }
                ]
            },
            "AditCreateRequest": {
                "title": "Adit Create Request",
                "description": "Adit create request schema",
                "required": [
                    "departure_id",
                    "adit",
                    "init",
                    "aditable_id",
                    "aditable_type"
                ],
                "allOf": [
                    {
                        "properties": {
                            "adit": {
                                "description": "Adit property",
                                "type": "string",
                                "format": "date-time",
                                "example": "YYYY-MM-DD HH:MM:SS"
                            },
                            "aditable_id": {
                                "description": "Aditable id property",
                                "type": "integer",
                                "format": "int64"
                            },
                            "aditable_type": {
                                "description": "Aditable type property",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/CreateElementRequest"
                    }
                ]
            },
            "AegtCreateRequest": {
                "title": "Aegt Create Request",
                "description": "Aegt create request schema",
                "required": [
                    "departure_id",
                    "aegt",
                    "init",
                    "aegtable_id",
                    "aegtable_type"
                ],
                "allOf": [
                    {
                        "properties": {
                            "aegt": {
                                "description": "Aegt property",
                                "type": "string",
                                "format": "date-time",
                                "example": "YYYY-MM-DD HH:MM:SS"
                            },
                            "aegtable_id": {
                                "description": "Aegtable id property",
                                "type": "integer",
                                "format": "int64"
                            },
                            "aegtable_type": {
                                "description": "Aegtable type property",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/CreateElementRequest"
                    }
                ]
            },
            "AeztCreateRequest": {
                "title": "Aezt Create Request",
                "description": "Aezt create request schema",
                "required": [
                    "departure_id",
                    "aezt",
                    "init",
                    "aeztable_id",
                    "aeztable_type"
                ],
                "allOf": [
                    {
                        "properties": {
                            "aezt": {
                                "description": "Aezt property",
                                "type": "string",
                                "format": "date-time",
                                "example": "YYYY-MM-DD HH:MM:SS"
                            },
                            "aeztable_id": {
                                "description": "Aeztable id property",
                                "type": "integer",
                                "format": "int64"
                            },
                            "aeztable_type": {
                                "description": "Aeztable type property",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/CreateElementRequest"
                    }
                ]
            },
            "AghtCreateRequest": {
                "title": "Aght Create Request",
                "description": "Aght create request schema",
                "required": [
                    "departure_id",
                    "aght",
                    "init",
                    "aghtable_id",
                    "aghtable_type"
                ],
                "allOf": [
                    {
                        "properties": {
                            "aght": {
                                "description": "Aght property",
                                "type": "string",
                                "format": "date-time",
                                "example": "YYYY-MM-DD HH:MM:SS"
                            },
                            "aghtable_id": {
                                "description": "Aghtable id property",
                                "type": "integer",
                                "format": "int64"
                            },
                            "aghtable_type": {
                                "description": "Aghtable type property",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/CreateElementRequest"
                    }
                ]
            },
            "AobtCreateRequest": {
                "title": "Aobt Create Request",
                "description": "Aobt create request schema",
                "required": [
                    "departure_id",
                    "aobt",
                    "init",
                    "aobtable_id",
                    "aobtable_type"
                ],
                "allOf": [
                    {
                        "properties": {
                            "aobt": {
                                "description": "Aobt property",
                                "type": "string",
                                "format": "date-time",
                                "example": "YYYY-MM-DD HH:MM:SS"
                            },
                            "aobtable_id": {
                                "description": "Aobtable id property",
                                "type": "integer",
                                "format": "int64"
                            },
                            "aobtable_type": {
                                "description": "Aobtable type property",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/CreateElementRequest"
                    }
                ]
            },
            "ArdtCreateRequest": {
                "title": "Ardt Create Request",
                "description": "Ardt create request schema",
                "required": [
                    "departure_id",
                    "ardt",
                    "init",
                    "ardtable_id",
                    "ardtable_type"
                ],
                "allOf": [
                    {
                        "properties": {
                            "ardt": {
                                "description": "Ardt property",
                                "type": "string",
                                "format": "date-time",
                                "example": "YYYY-MM-DD HH:MM:SS"
                            },
                            "ardtable_id": {
                                "description": "Ardtable id property",
                                "type": "integer",
                                "format": "int64"
                            },
                            "ardtable_type": {
                                "description": "Ardtable type property",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/CreateElementRequest"
                    }
                ]
            },
            "ArztCreateRequest": {
                "title": "Arzt Create Request",
                "description": "Arzt create request schema",
                "required": [
                    "departure_id",
                    "arzt",
                    "init",
                    "arztable_id",
                    "arztable_type"
                ],
                "allOf": [
                    {
                        "properties": {
                            "arzt": {
                                "description": "Arzt property",
                                "type": "string",
                                "format": "date-time",
                                "example": "YYYY-MM-DD HH:MM:SS"
                            },
                            "arztable_id": {
                                "description": "Arztable id property",
                                "type": "integer",
                                "format": "int64"
                            },
                            "arztable_type": {
                                "description": "Arztable type property",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/CreateElementRequest"
                    }
                ]
            },
            "AsbtCreateRequest": {
                "title": "Asbt Create Request",
                "description": "Asbt create request schema",
                "required": [
                    "departure_id",
                    "asbt",
                    "init",
                    "asbtable_id",
                    "asbtable_type"
                ],
                "allOf": [
                    {
                        "properties": {
                            "asbt": {
                                "description": "Asbt property",
                                "type": "string",
                                "format": "date-time",
                                "example": "YYYY-MM-DD HH:MM:SS"
                            },
                            "asbtable_id": {
                                "description": "Arztable id property",
                                "type": "integer",
                                "format": "int64"
                            },
                            "asbtable_type": {
                                "description": "Arztable type property",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/CreateElementRequest"
                    }
                ]
            },
            "AsrtCreateRequest": {
                "title": "Asrt Create Request",
                "description": "Asrt create request schema",
                "required": [
                    "departure_id",
                    "asrt",
                    "init",
                    "asrtable_id",
                    "asrtable_type"
                ],
                "allOf": [
                    {
                        "properties": {
                            "asrt": {
                                "description": "Asrt property",
                                "type": "string",
                                "format": "date-time",
                                "example": "YYYY-MM-DD HH:MM:SS"
                            },
                            "asrtable_id": {
                                "description": "Asrtable id property",
                                "type": "integer",
                                "format": "int64"
                            },
                            "asrtable_type": {
                                "description": "Asrtable type property",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/CreateElementRequest"
                    }
                ]
            },
            "AtetCreateRequest": {
                "title": "Atet Create Request",
                "description": "Atet create request schema",
                "required": [
                    "departure_id",
                    "atet",
                    "init",
                    "atetable_id",
                    "atetable_type"
                ],
                "allOf": [
                    {
                        "properties": {
                            "atet": {
                                "description": "Atet property",
                                "type": "string",
                                "format": "date-time",
                                "example": "YYYY-MM-DD HH:MM:SS"
                            },
                            "atetable_id": {
                                "description": "Atetable id property",
                                "type": "integer",
                                "format": "int64"
                            },
                            "atetable_type": {
                                "description": "Atetable type property",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/CreateElementRequest"
                    }
                ]
            },
            "AtotCreateRequest": {
                "title": "Atot Create Request",
                "description": "Atot create request schema",
                "required": [
                    "departure_id",
                    "atot",
                    "init",
                    "atotable_id",
                    "atotable_type"
                ],
                "allOf": [
                    {
                        "properties": {
                            "atot": {
                                "description": "Atot property",
                                "type": "string",
                                "format": "date-time",
                                "example": "YYYY-MM-DD HH:MM:SS"
                            },
                            "atotable_id": {
                                "description": "Atotable id property",
                                "type": "integer",
                                "format": "int64"
                            },
                            "atotable_type": {
                                "description": "Atotable type property",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/CreateElementRequest"
                    }
                ]
            },
            "AtstCreateRequest": {
                "title": "Atst Create Request",
                "description": "Atst create request schema",
                "required": [
                    "departure_id",
                    "atst",
                    "init",
                    "atstable_id",
                    "atstable_type"
                ],
                "allOf": [
                    {
                        "properties": {
                            "atst": {
                                "description": "Atst property",
                                "type": "string",
                                "format": "date-time",
                                "example": "YYYY-MM-DD HH:MM:SS"
                            },
                            "atstable_id": {
                                "description": "Atstable id property",
                                "type": "integer",
                                "format": "int64"
                            },
                            "atstable_type": {
                                "description": "Atstable type property",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/CreateElementRequest"
                    }
                ]
            },
            "AtttCreateRequest": {
                "title": "Attt Create Request",
                "description": "Attt create request schema",
                "required": [
                    "departure_id",
                    "attt",
                    "init",
                    "atttable_id",
                    "atttable_type"
                ],
                "allOf": [
                    {
                        "properties": {
                            "attt": {
                                "description": "Attt property",
                                "type": "string",
                                "format": "date-time",
                                "example": "YYYY-MM-DD HH:MM:SS"
                            },
                            "atttable_id": {
                                "description": "Atttable id property",
                                "type": "integer",
                                "format": "int64"
                            },
                            "atttable_type": {
                                "description": "Atttable type property",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/CreateElementRequest"
                    }
                ]
            },
            "AxotCreateRequest": {
                "title": "Axot Create Request",
                "description": "Axot create request schema",
                "required": [
                    "departure_id",
                    "axot",
                    "init",
                    "axotable_id",
                    "axotable_type"
                ],
                "allOf": [
                    {
                        "properties": {
                            "axot": {
                                "description": "Axot property",
                                "type": "string",
                                "format": "date-time",
                                "example": "YYYY-MM-DD HH:MM:SS"
                            },
                            "axotable_id": {
                                "description": "Axotable id property",
                                "type": "integer",
                                "format": "int64"
                            },
                            "axotable_type": {
                                "description": "Axotable type property",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/CreateElementRequest"
                    }
                ]
            },
            "AzatCreateRequest": {
                "title": "Azat Create Request",
                "description": "Azat create request schema",
                "required": [
                    "departure_id",
                    "azat",
                    "init",
                    "azatable_id",
                    "azatable_type"
                ],
                "allOf": [
                    {
                        "properties": {
                            "azat": {
                                "description": "Azat property",
                                "type": "string",
                                "format": "date-time",
                                "example": "YYYY-MM-DD HH:MM:SS"
                            },
                            "azatable_id": {
                                "description": "Azatable id property",
                                "type": "integer",
                                "format": "int64"
                            },
                            "azatable_type": {
                                "description": "Azatable type property",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/CreateElementRequest"
                    }
                ]
            },
            "CtotCreateRequest": {
                "title": "Ctot Create Request",
                "description": "Ctot create request schema",
                "required": [
                    "departure_id",
                    "ctot",
                    "init",
                    "ctotable_id",
                    "ctotable_type"
                ],
                "allOf": [
                    {
                        "properties": {
                            "ctot": {
                                "description": "Ctot property",
                                "type": "string",
                                "format": "date-time",
                                "example": "YYYY-MM-DD HH:MM:SS"
                            },
                            "ctotable_id": {
                                "description": "Ctotable id property",
                                "type": "integer",
                                "format": "int64"
                            },
                            "ctotable_type": {
                                "description": "Ctotable type property",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/CreateElementRequest"
                    }
                ]
            },
            "EcztCreateRequest": {
                "title": "Eczt Create Request",
                "description": "Eczt create request schema",
                "required": [
                    "departure_id",
                    "eczt",
                    "init",
                    "ecztable_id",
                    "ecztable_type"
                ],
                "allOf": [
                    {
                        "properties": {
                            "eczt": {
                                "description": "Eczt property",
                                "type": "string",
                                "format": "date-time",
                                "example": "YYYY-MM-DD HH:MM:SS"
                            },
                            "ecztable_id": {
                                "description": "Ecztable id property",
                                "type": "integer",
                                "format": "int64"
                            },
                            "ecztable_type": {
                                "description": "Ecztable type property",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/CreateElementRequest"
                    }
                ]
            },
            "EditCreateRequest": {
                "title": "Edit Create Request",
                "description": "Edit create request schema",
                "required": [
                    "departure_id",
                    "edit",
                    "init",
                    "editable_id",
                    "editable_type"
                ],
                "allOf": [
                    {
                        "properties": {
                            "edit": {
                                "description": "Edit property",
                                "type": "string",
                                "format": "date-time",
                                "example": "YYYY-MM-DD HH:MM:SS"
                            },
                            "editable_id": {
                                "description": "Editable id property",
                                "type": "integer",
                                "format": "int64"
                            },
                            "editable_type": {
                                "description": "Editable type property",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/CreateElementRequest"
                    }
                ]
            },
            "EeztCreateRequest": {
                "title": "Eezt Create Request",
                "description": "Eezt create request schema",
                "required": [
                    "departure_id",
                    "eezt",
                    "init",
                    "eeztable_id",
                    "eeztable_type"
                ],
                "allOf": [
                    {
                        "properties": {
                            "eezt": {
                                "description": "Eezt property",
                                "type": "string",
                                "format": "date-time",
                                "example": "YYYY-MM-DD HH:MM:SS"
                            },
                            "eeztable_id": {
                                "description": "Eeztable id property",
                                "type": "integer",
                                "format": "int64"
                            },
                            "eeztable_type": {
                                "description": "Eeztable type property",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/CreateElementRequest"
                    }
                ]
            },
            "EobtCreateRequest": {
                "title": "Eobt Create Request",
                "description": "Eobt create request schema",
                "required": [
                    "departure_id",
                    "eobt",
                    "init",
                    "eobtable_id",
                    "eobtable_type"
                ],
                "allOf": [
                    {
                        "properties": {
                            "eobt": {
                                "description": "Eobt property",
                                "type": "string",
                                "format": "date-time",
                                "example": "YYYY-MM-DD HH:MM:SS"
                            },
                            "eobtable_id": {
                                "description": "Eobtable id property",
                                "type": "integer",
                                "format": "int64"
                            },
                            "eobtable_type": {
                                "description": "Eobtable type property",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/CreateElementRequest"
                    }
                ]
            },
            "ErztCreateRequest": {
                "title": "Erzt Create Request",
                "description": "Erzt create request schema",
                "required": [
                    "departure_id",
                    "erzt",
                    "init",
                    "erztable_id",
                    "erztable_type"
                ],
                "allOf": [
                    {
                        "properties": {
                            "erzt": {
                                "description": "Erzt property",
                                "type": "string",
                                "format": "date-time",
                                "example": "YYYY-MM-DD HH:MM:SS"
                            },
                            "erztable_id": {
                                "description": "Erztable id property",
                                "type": "integer",
                                "format": "int64"
                            },
                            "erztable_type": {
                                "description": "Erztable type property",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/CreateElementRequest"
                    }
                ]
            },
            "EtotCreateRequest": {
                "title": "Etot Create Request",
                "description": "Etot create request schema",
                "required": [
                    "departure_id",
                    "etot",
                    "init",
                    "etotable_id",
                    "etotable_type"
                ],
                "allOf": [
                    {
                        "properties": {
                            "etot": {
                                "description": "Etot property",
                                "type": "string",
                                "format": "date-time",
                                "example": "YYYY-MM-DD HH:MM:SS"
                            },
                            "etotable_id": {
                                "description": "Etotable id property",
                                "type": "integer",
                                "format": "int64"
                            },
                            "etotable_type": {
                                "description": "Etotable type property",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/CreateElementRequest"
                    }
                ]
            },
            "ExotCreateRequest": {
                "title": "Exot Create Request",
                "description": "Exot create request schema",
                "required": [
                    "departure_id",
                    "exot",
                    "init",
                    "exotable_id",
                    "exotable_type"
                ],
                "allOf": [
                    {
                        "properties": {
                            "exot": {
                                "description": "Exot property",
                                "type": "string",
                                "format": "date-time",
                                "example": "YYYY-MM-DD HH:MM:SS"
                            },
                            "exotable_id": {
                                "description": "Exotable id property",
                                "type": "integer",
                                "format": "int64"
                            },
                            "exotable_type": {
                                "description": "Exotable type property",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/CreateElementRequest"
                    }
                ]
            },
            "SobtCreateRequest": {
                "title": "Sobt Create Request",
                "description": "Sobt create request schema",
                "required": [
                    "departure_id",
                    "sobt",
                    "init",
                    "sobtable_id",
                    "sobtable_type"
                ],
                "allOf": [
                    {
                        "properties": {
                            "sobt": {
                                "description": "Sobt property",
                                "type": "string",
                                "format": "date-time",
                                "example": "YYYY-MM-DD HH:MM:SS"
                            },
                            "sobtable_id": {
                                "description": "Sobtable id property",
                                "type": "integer",
                                "format": "int64"
                            },
                            "sobtable_type": {
                                "description": "Sobtable type property",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/CreateElementRequest"
                    }
                ]
            },
            "StetCreateRequest": {
                "title": "Stet Create Request",
                "description": "Stet create request schema",
                "required": [
                    "departure_id",
                    "stet",
                    "init",
                    "stetable_id",
                    "stetable_type"
                ],
                "allOf": [
                    {
                        "properties": {
                            "stet": {
                                "description": "Stet property",
                                "type": "string",
                                "format": "date-time",
                                "example": "YYYY-MM-DD HH:MM:SS"
                            },
                            "stetable_id": {
                                "description": "Stetable id property",
                                "type": "integer",
                                "format": "int64"
                            },
                            "stetable_type": {
                                "description": "Stetable type property",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/CreateElementRequest"
                    }
                ]
            },
            "StstCreateRequest": {
                "title": "Stst Create Request",
                "description": "Stst create request schema",
                "required": [
                    "departure_id",
                    "stst",
                    "init",
                    "ststable_id",
                    "ststable_type"
                ],
                "allOf": [
                    {
                        "properties": {
                            "stst": {
                                "description": "Stst property",
                                "type": "string",
                                "format": "date-time",
                                "example": "YYYY-MM-DD HH:MM:SS"
                            },
                            "ststable_id": {
                                "description": "Ststable id property",
                                "type": "integer",
                                "format": "int64"
                            },
                            "ststable_type": {
                                "description": "Ststable type property",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/CreateElementRequest"
                    }
                ]
            },
            "TobtCreateRequest": {
                "title": "Tobt Create Request",
                "description": "Tobt create request schema",
                "required": [
                    "departure_id",
                    "tobt",
                    "init",
                    "tobtable_id",
                    "tobtable_type"
                ],
                "allOf": [
                    {
                        "properties": {
                            "tobt": {
                                "description": "Tobt property",
                                "type": "string",
                                "format": "date-time",
                                "example": "YYYY-MM-DD HH:MM:SS"
                            },
                            "tobtable_id": {
                                "description": "Tobtable id property",
                                "type": "integer",
                                "format": "int64"
                            },
                            "tobtable_type": {
                                "description": "Tobtable type property",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/CreateElementRequest"
                    }
                ]
            },
            "TsatCreateRequest": {
                "title": "Tsat Create Request",
                "description": "Tsat create request schema",
                "required": [
                    "departure_id",
                    "tsat",
                    "init",
                    "tsatable_id",
                    "tsatable_type"
                ],
                "allOf": [
                    {
                        "properties": {
                            "tsat": {
                                "description": "Tsat property",
                                "type": "string",
                                "format": "date-time",
                                "example": "YYYY-MM-DD HH:MM:SS"
                            },
                            "tsatable_id": {
                                "description": "Tsatable id property",
                                "type": "integer",
                                "format": "int64"
                            },
                            "tsatable_type": {
                                "description": "Tsatable type property",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/CreateElementRequest"
                    }
                ]
            },
            "TtotCreateRequest": {
                "title": "Ttot Create Request",
                "description": "Ttot create request schema",
                "required": [
                    "departure_id",
                    "ttot",
                    "init",
                    "ttotable_id",
                    "ttotable_type"
                ],
                "allOf": [
                    {
                        "properties": {
                            "ttot": {
                                "description": "Ttot property",
                                "type": "string",
                                "format": "date-time",
                                "example": "YYYY-MM-DD HH:MM:SS"
                            },
                            "ttotable_id": {
                                "description": "Ttotable id property",
                                "type": "integer",
                                "format": "int64"
                            },
                            "ttotable_type": {
                                "description": "Ttotable type property",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/CreateElementRequest"
                    }
                ]
            },
            "ElementIdRequest": {
                "title": "Element Id Request",
                "description": "Element id request schema",
                "required": [
                    "id"
                ],
                "properties": {
                    "id": {
                        "description": "Id property",
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "type": "object"
            },
            "UpdateElementRequest": {
                "title": "Element Request",
                "description": "Element request schema",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/IdentityAuditableRequest"
                    },
                    {
                        "required": [
                            "id",
                            "departure_id",
                            "role_initialize_id",
                            "role_origin_id"
                        ],
                        "properties": {
                            "departure_id": {
                                "description": "Departure id property",
                                "type": "integer",
                                "format": "int64"
                            },
                            "reason": {
                                "description": "Reason property",
                                "type": "string"
                            },
                            "init": {
                                "description": "Init property",
                                "type": "boolean"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "AcgtUpdateRequest": {
                "title": "Acgt Update Request",
                "description": "Acgt update request schema",
                "required": [
                    "id",
                    "departure_id",
                    "acgt",
                    "init",
                    "acgtable_id",
                    "acgtable_type"
                ],
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ElementIdRequest"
                    },
                    {
                        "properties": {
                            "acgt": {
                                "description": "Acgt property",
                                "type": "string",
                                "format": "date-time",
                                "example": "YYYY-MM-DD HH:MM:SS"
                            },
                            "acgtable_id": {
                                "description": "Acgtable id property",
                                "type": "integer",
                                "format": "int64"
                            },
                            "acgtable_type": {
                                "description": "Acgtable type property",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/UpdateElementRequest"
                    }
                ]
            },
            "AcztUpdateRequest": {
                "title": "Aczt Update Request",
                "description": "Aczt update request schema",
                "required": [
                    "id",
                    "departure_id",
                    "acgt",
                    "init",
                    "acztable_id",
                    "acztable_type"
                ],
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ElementIdRequest"
                    },
                    {
                        "properties": {
                            "aczt": {
                                "description": "Aczt property",
                                "type": "string",
                                "format": "date-time",
                                "example": "YYYY-MM-DD HH:MM:SS"
                            },
                            "acztable_id": {
                                "description": "Acztable id property",
                                "type": "integer",
                                "format": "int64"
                            },
                            "acztable_type": {
                                "description": "Acztable type property",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/UpdateElementRequest"
                    }
                ]
            },
            "AditUpdateRequest": {
                "title": "Adit Update Request",
                "description": "Adit update request schema",
                "required": [
                    "id",
                    "departure_id",
                    "adit",
                    "init",
                    "aditable_id",
                    "aditable_type"
                ],
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ElementIdRequest"
                    },
                    {
                        "properties": {
                            "adit": {
                                "description": "Adit property",
                                "type": "string",
                                "format": "date-time",
                                "example": "YYYY-MM-DD HH:MM:SS"
                            },
                            "aditable_id": {
                                "description": "Aditable id property",
                                "type": "integer",
                                "format": "int64"
                            },
                            "aditable_type": {
                                "description": "Aditable type property",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/UpdateElementRequest"
                    }
                ]
            },
            "AegtUpdateRequest": {
                "title": "Aegt Update Request",
                "description": "Aegt update request schema",
                "required": [
                    "id",
                    "departure_id",
                    "aegt",
                    "init",
                    "aegtable_id",
                    "aegtable_type"
                ],
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ElementIdRequest"
                    },
                    {
                        "properties": {
                            "aegt": {
                                "description": "Aegt property",
                                "type": "string",
                                "format": "date-time",
                                "example": "YYYY-MM-DD HH:MM:SS"
                            },
                            "aegtable_id": {
                                "description": "Aegtable id property",
                                "type": "integer",
                                "format": "int64"
                            },
                            "aegtable_type": {
                                "description": "Aegtable type property",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/UpdateElementRequest"
                    }
                ]
            },
            "AeztUpdateRequest": {
                "title": "Aezt Update Request",
                "description": "Aezt update request schema",
                "required": [
                    "id",
                    "departure_id",
                    "aezt",
                    "init",
                    "aeztable_id",
                    "aeztable_type"
                ],
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ElementIdRequest"
                    },
                    {
                        "properties": {
                            "aezt": {
                                "description": "Aezt property",
                                "type": "string",
                                "format": "date-time",
                                "example": "YYYY-MM-DD HH:MM:SS"
                            },
                            "aeztable_id": {
                                "description": "Aeztable id property",
                                "type": "integer",
                                "format": "int64"
                            },
                            "aeztable_type": {
                                "description": "Aeztable type property",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/UpdateElementRequest"
                    }
                ]
            },
            "AghtUpdateRequest": {
                "title": "Aght Update Request",
                "description": "Aght update request schema",
                "required": [
                    "id",
                    "departure_id",
                    "aght",
                    "init",
                    "aghtable_id",
                    "aghtable_type"
                ],
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ElementIdRequest"
                    },
                    {
                        "properties": {
                            "aght": {
                                "description": "Aght property",
                                "type": "string",
                                "format": "date-time",
                                "example": "YYYY-MM-DD HH:MM:SS"
                            },
                            "aghtable_id": {
                                "description": "Aghtable id property",
                                "type": "integer",
                                "format": "int64"
                            },
                            "aghtable_type": {
                                "description": "Aghtable type property",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/UpdateElementRequest"
                    }
                ]
            },
            "AobtUpdateRequest": {
                "title": "Aobt Update Request",
                "description": "Aobt update request schema",
                "required": [
                    "id",
                    "departure_id",
                    "aobt",
                    "init",
                    "aobtable_id",
                    "aobtable_type"
                ],
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ElementIdRequest"
                    },
                    {
                        "properties": {
                            "aobt": {
                                "description": "Aobt property",
                                "type": "string",
                                "format": "date-time",
                                "example": "YYYY-MM-DD HH:MM:SS"
                            },
                            "aobtable_id": {
                                "description": "Aobtable id property",
                                "type": "integer",
                                "format": "int64"
                            },
                            "aobtable_type": {
                                "description": "Aobtable type property",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/UpdateElementRequest"
                    }
                ]
            },
            "ArdtUpdateRequest": {
                "title": "Ardt Update Request",
                "description": "Ardt update request schema",
                "required": [
                    "id",
                    "departure_id",
                    "ardt",
                    "init",
                    "ardtable_id",
                    "ardtable_type"
                ],
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ElementIdRequest"
                    },
                    {
                        "properties": {
                            "ardt": {
                                "description": "Ardt property",
                                "type": "string",
                                "format": "date-time",
                                "example": "YYYY-MM-DD HH:MM:SS"
                            },
                            "ardtable_id": {
                                "description": "Ardtable id property",
                                "type": "integer",
                                "format": "int64"
                            },
                            "ardtable_type": {
                                "description": "Ardtable type property",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/UpdateElementRequest"
                    }
                ]
            },
            "ArztUpdateRequest": {
                "title": "Arzt Update Request",
                "description": "Arzt update request schema",
                "required": [
                    "id",
                    "departure_id",
                    "arzt",
                    "init",
                    "arztable_id",
                    "arztable_type"
                ],
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ElementIdRequest"
                    },
                    {
                        "properties": {
                            "arzt": {
                                "description": "Arzt property",
                                "type": "string",
                                "format": "date-time",
                                "example": "YYYY-MM-DD HH:MM:SS"
                            },
                            "arztable_id": {
                                "description": "Arztable id property",
                                "type": "integer",
                                "format": "int64"
                            },
                            "arztable_type": {
                                "description": "Arztable type property",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/UpdateElementRequest"
                    }
                ]
            },
            "AsbtUpdateRequest": {
                "title": "Asbt Update Request",
                "description": "Asbt update request schema",
                "required": [
                    "id",
                    "departure_id",
                    "asbt",
                    "init",
                    "asbtable_id",
                    "asbtable_type"
                ],
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ElementIdRequest"
                    },
                    {
                        "properties": {
                            "asbt": {
                                "description": "Asbt property",
                                "type": "string",
                                "format": "date-time",
                                "example": "YYYY-MM-DD HH:MM:SS"
                            },
                            "asbtable_id": {
                                "description": "Arztable id property",
                                "type": "integer",
                                "format": "int64"
                            },
                            "asbtable_type": {
                                "description": "Arztable type property",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/UpdateElementRequest"
                    }
                ]
            },
            "AsrtUpdateRequest": {
                "title": "Asrt Update Request",
                "description": "Asrt update request schema",
                "required": [
                    "id",
                    "departure_id",
                    "asrt",
                    "init",
                    "asrtable_id",
                    "asrtable_type"
                ],
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ElementIdRequest"
                    },
                    {
                        "properties": {
                            "asrt": {
                                "description": "Asrt property",
                                "type": "string",
                                "format": "date-time",
                                "example": "YYYY-MM-DD HH:MM:SS"
                            },
                            "asrtable_id": {
                                "description": "Asrtable id property",
                                "type": "integer",
                                "format": "int64"
                            },
                            "asrtable_type": {
                                "description": "Asrtable type property",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/UpdateElementRequest"
                    }
                ]
            },
            "AtetUpdateRequest": {
                "title": "Atet Update Request",
                "description": "Atet update request schema",
                "required": [
                    "id",
                    "departure_id",
                    "atet",
                    "init",
                    "atetable_id",
                    "atetable_type"
                ],
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ElementIdRequest"
                    },
                    {
                        "properties": {
                            "atet": {
                                "description": "Atet property",
                                "type": "string",
                                "format": "date-time",
                                "example": "YYYY-MM-DD HH:MM:SS"
                            },
                            "atetable_id": {
                                "description": "Atetable id property",
                                "type": "integer",
                                "format": "int64"
                            },
                            "atetable_type": {
                                "description": "Atetable type property",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/UpdateElementRequest"
                    }
                ]
            },
            "AtotUpdateRequest": {
                "title": "Atot Update Request",
                "description": "Atot update request schema",
                "required": [
                    "id",
                    "departure_id",
                    "atot",
                    "init",
                    "atotable_id",
                    "atotable_type"
                ],
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ElementIdRequest"
                    },
                    {
                        "properties": {
                            "atot": {
                                "description": "Atot property",
                                "type": "string",
                                "format": "date-time",
                                "example": "YYYY-MM-DD HH:MM:SS"
                            },
                            "atotable_id": {
                                "description": "Atotable id property",
                                "type": "integer",
                                "format": "int64"
                            },
                            "atotable_type": {
                                "description": "Atotable type property",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/UpdateElementRequest"
                    }
                ]
            },
            "AtstUpdateRequest": {
                "title": "Atst Update Request",
                "description": "Atst update request schema",
                "required": [
                    "id",
                    "departure_id",
                    "atst",
                    "init",
                    "atstable_id",
                    "atstable_type"
                ],
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ElementIdRequest"
                    },
                    {
                        "properties": {
                            "atst": {
                                "description": "Atst property",
                                "type": "string",
                                "format": "date-time",
                                "example": "YYYY-MM-DD HH:MM:SS"
                            },
                            "atstable_id": {
                                "description": "Atstable id property",
                                "type": "integer",
                                "format": "int64"
                            },
                            "atstable_type": {
                                "description": "Atstable type property",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/UpdateElementRequest"
                    }
                ]
            },
            "AtttUpdateRequest": {
                "title": "Attt Update Request",
                "description": "Attt update request schema",
                "required": [
                    "id",
                    "departure_id",
                    "attt",
                    "init",
                    "atttable_id",
                    "atttable_type"
                ],
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ElementIdRequest"
                    },
                    {
                        "properties": {
                            "attt": {
                                "description": "Attt property",
                                "type": "string",
                                "format": "date-time",
                                "example": "YYYY-MM-DD HH:MM:SS"
                            },
                            "atttable_id": {
                                "description": "Atttable id property",
                                "type": "integer",
                                "format": "int64"
                            },
                            "atttable_type": {
                                "description": "Atttable type property",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/UpdateElementRequest"
                    }
                ]
            },
            "AxotUpdateRequest": {
                "title": "Axot Update Request",
                "description": "Axot update request schema",
                "required": [
                    "id",
                    "departure_id",
                    "axot",
                    "init",
                    "axotable_id",
                    "axotable_type"
                ],
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ElementIdRequest"
                    },
                    {
                        "properties": {
                            "axot": {
                                "description": "Axot property",
                                "type": "string",
                                "format": "date-time",
                                "example": "YYYY-MM-DD HH:MM:SS"
                            },
                            "axotable_id": {
                                "description": "Axotable id property",
                                "type": "integer",
                                "format": "int64"
                            },
                            "axotable_type": {
                                "description": "Axotable type property",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/UpdateElementRequest"
                    }
                ]
            },
            "AzatUpdateRequest": {
                "title": "Azat Update Request",
                "description": "Azat update request schema",
                "required": [
                    "id",
                    "departure_id",
                    "azat",
                    "init",
                    "azatable_id",
                    "azatable_type"
                ],
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ElementIdRequest"
                    },
                    {
                        "properties": {
                            "azat": {
                                "description": "Azat property",
                                "type": "string",
                                "format": "date-time",
                                "example": "YYYY-MM-DD HH:MM:SS"
                            },
                            "azatable_id": {
                                "description": "Azatable id property",
                                "type": "integer",
                                "format": "int64"
                            },
                            "azatable_type": {
                                "description": "Azatable type property",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/UpdateElementRequest"
                    }
                ]
            },
            "CtotUpdateRequest": {
                "title": "Ctot Update Request",
                "description": "Ctot update request schema",
                "required": [
                    "id",
                    "departure_id",
                    "ctot",
                    "init",
                    "ctotable_id",
                    "ctotable_type"
                ],
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ElementIdRequest"
                    },
                    {
                        "properties": {
                            "ctot": {
                                "description": "Ctot property",
                                "type": "string",
                                "format": "date-time",
                                "example": "YYYY-MM-DD HH:MM:SS"
                            },
                            "ctotable_id": {
                                "description": "Ctotable id property",
                                "type": "integer",
                                "format": "int64"
                            },
                            "ctotable_type": {
                                "description": "Ctotable type property",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/UpdateElementRequest"
                    }
                ]
            },
            "EcztUpdateRequest": {
                "title": "Eczt Update Request",
                "description": "Eczt update request schema",
                "required": [
                    "id",
                    "departure_id",
                    "eczt",
                    "init",
                    "ecztable_id",
                    "ecztable_type"
                ],
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ElementIdRequest"
                    },
                    {
                        "properties": {
                            "eczt": {
                                "description": "Eczt property",
                                "type": "string",
                                "format": "date-time",
                                "example": "YYYY-MM-DD HH:MM:SS"
                            },
                            "ecztable_id": {
                                "description": "Ecztable id property",
                                "type": "integer",
                                "format": "int64"
                            },
                            "ecztable_type": {
                                "description": "Ecztable type property",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/UpdateElementRequest"
                    }
                ]
            },
            "EditUpdateRequest": {
                "title": "Edit Update Request",
                "description": "Edit update request schema",
                "required": [
                    "id",
                    "departure_id",
                    "edit",
                    "init",
                    "editable_id",
                    "editable_type"
                ],
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ElementIdRequest"
                    },
                    {
                        "properties": {
                            "edit": {
                                "description": "Edit property",
                                "type": "string",
                                "format": "date-time",
                                "example": "YYYY-MM-DD HH:MM:SS"
                            },
                            "editable_id": {
                                "description": "Editable id property",
                                "type": "integer",
                                "format": "int64"
                            },
                            "editable_type": {
                                "description": "Editable type property",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/UpdateElementRequest"
                    }
                ]
            },
            "EeztUpdateRequest": {
                "title": "Eezt Update Request",
                "description": "Eezt update request schema",
                "required": [
                    "id",
                    "departure_id",
                    "eezt",
                    "init",
                    "eeztable_id",
                    "eeztable_type"
                ],
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ElementIdRequest"
                    },
                    {
                        "properties": {
                            "eezt": {
                                "description": "Eezt property",
                                "type": "string",
                                "format": "date-time",
                                "example": "YYYY-MM-DD HH:MM:SS"
                            },
                            "eeztable_id": {
                                "description": "Eeztable id property",
                                "type": "integer",
                                "format": "int64"
                            },
                            "eeztable_type": {
                                "description": "Eeztable type property",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/UpdateElementRequest"
                    }
                ]
            },
            "EobtUpdateRequest": {
                "title": "Eobt Update Request",
                "description": "Eobt update request schema",
                "required": [
                    "id",
                    "departure_id",
                    "eobt",
                    "init",
                    "eobtable_id",
                    "eobtable_type"
                ],
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ElementIdRequest"
                    },
                    {
                        "properties": {
                            "eobt": {
                                "description": "Eobt property",
                                "type": "string",
                                "format": "date-time",
                                "example": "YYYY-MM-DD HH:MM:SS"
                            },
                            "eobtable_id": {
                                "description": "Eeztable id property",
                                "type": "integer",
                                "format": "int64"
                            },
                            "eobtable_type": {
                                "description": "Eeztable type property",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/UpdateElementRequest"
                    }
                ]
            },
            "ErztUpdateRequest": {
                "title": "Erzt Update Request",
                "description": "Erzt update request schema",
                "required": [
                    "id",
                    "departure_id",
                    "erzt",
                    "init",
                    "erztable_id",
                    "erztable_type"
                ],
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ElementIdRequest"
                    },
                    {
                        "properties": {
                            "erzt": {
                                "description": "Erzt property",
                                "type": "string",
                                "format": "date-time",
                                "example": "YYYY-MM-DD HH:MM:SS"
                            },
                            "erztable_id": {
                                "description": "Eeztable id property",
                                "type": "integer",
                                "format": "int64"
                            },
                            "erztable_type": {
                                "description": "Eeztable type property",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/UpdateElementRequest"
                    }
                ]
            },
            "EtotUpdateRequest": {
                "title": "Etot Update Request",
                "description": "Etot update request schema",
                "required": [
                    "id",
                    "departure_id",
                    "etot",
                    "init",
                    "etotable_id",
                    "etotable_type"
                ],
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ElementIdRequest"
                    },
                    {
                        "properties": {
                            "etot": {
                                "description": "Etot property",
                                "type": "string",
                                "format": "date-time",
                                "example": "YYYY-MM-DD HH:MM:SS"
                            },
                            "etotable_id": {
                                "description": "Eeztable id property",
                                "type": "integer",
                                "format": "int64"
                            },
                            "etotable_type": {
                                "description": "Eeztable type property",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/UpdateElementRequest"
                    }
                ]
            },
            "ExotUpdateRequest": {
                "title": "Exot Update Request",
                "description": "Exot update request schema",
                "required": [
                    "id",
                    "departure_id",
                    "exot",
                    "init",
                    "exotable_id",
                    "exotable_type"
                ],
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ElementIdRequest"
                    },
                    {
                        "properties": {
                            "exot": {
                                "description": "Exot property",
                                "type": "string",
                                "format": "date-time",
                                "example": "YYYY-MM-DD HH:MM:SS"
                            },
                            "exotable_id": {
                                "description": "Eeztable id property",
                                "type": "integer",
                                "format": "int64"
                            },
                            "exotable_type": {
                                "description": "Eeztable type property",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/UpdateElementRequest"
                    }
                ]
            },
            "SobtUpdateRequest": {
                "title": "Sobt Update Request",
                "description": "Sobt update request schema",
                "required": [
                    "id",
                    "departure_id",
                    "sobt",
                    "init",
                    "sobtable_id",
                    "sobtable_type"
                ],
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ElementIdRequest"
                    },
                    {
                        "properties": {
                            "sobt": {
                                "description": "Sobt property",
                                "type": "string",
                                "format": "date-time",
                                "example": "YYYY-MM-DD HH:MM:SS"
                            },
                            "sobtable_id": {
                                "description": "Eeztable id property",
                                "type": "integer",
                                "format": "int64"
                            },
                            "sobtable_type": {
                                "description": "Eeztable type property",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/UpdateElementRequest"
                    }
                ]
            },
            "StetUpdateRequest": {
                "title": "Stet Update Request",
                "description": "Stet update request schema",
                "required": [
                    "id",
                    "departure_id",
                    "stet",
                    "init",
                    "stetable_id",
                    "stetable_type"
                ],
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ElementIdRequest"
                    },
                    {
                        "properties": {
                            "stet": {
                                "description": "Stet property",
                                "type": "string",
                                "format": "date-time",
                                "example": "YYYY-MM-DD HH:MM:SS"
                            },
                            "stetable_id": {
                                "description": "Eeztable id property",
                                "type": "integer",
                                "format": "int64"
                            },
                            "stetable_type": {
                                "description": "Eeztable type property",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/UpdateElementRequest"
                    }
                ]
            },
            "StstUpdateRequest": {
                "title": "Stst Update Request",
                "description": "Stst update request schema",
                "required": [
                    "id",
                    "departure_id",
                    "stst",
                    "init",
                    "ststable_id",
                    "ststable_type"
                ],
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ElementIdRequest"
                    },
                    {
                        "properties": {
                            "stst": {
                                "description": "Stst property",
                                "type": "string",
                                "format": "date-time",
                                "example": "YYYY-MM-DD HH:MM:SS"
                            },
                            "ststable_id": {
                                "description": "Eeztable id property",
                                "type": "integer",
                                "format": "int64"
                            },
                            "ststable_type": {
                                "description": "Eeztable type property",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/UpdateElementRequest"
                    }
                ]
            },
            "TobtUpdateRequest": {
                "title": "Tobt Update Request",
                "description": "Tobt update request schema",
                "required": [
                    "id",
                    "departure_id",
                    "tobt",
                    "init",
                    "tobtable_id",
                    "tobtable_type"
                ],
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ElementIdRequest"
                    },
                    {
                        "properties": {
                            "tobt": {
                                "description": "Tobt property",
                                "type": "string",
                                "format": "date-time",
                                "example": "YYYY-MM-DD HH:MM:SS"
                            },
                            "tobtable_id": {
                                "description": "Eeztable id property",
                                "type": "integer",
                                "format": "int64"
                            },
                            "tobtable_type": {
                                "description": "Eeztable type property",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/UpdateElementRequest"
                    }
                ]
            },
            "TsatUpdateRequest": {
                "title": "Tsat Update Request",
                "description": "Tsat update request schema",
                "required": [
                    "id",
                    "departure_id",
                    "tsat",
                    "init",
                    "tsatable_id",
                    "tsatable_type"
                ],
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ElementIdRequest"
                    },
                    {
                        "properties": {
                            "tsat": {
                                "description": "Tsat property",
                                "type": "string",
                                "format": "date-time",
                                "example": "YYYY-MM-DD HH:MM:SS"
                            },
                            "tsatable_id": {
                                "description": "Eeztable id property",
                                "type": "integer",
                                "format": "int64"
                            },
                            "tsatable_type": {
                                "description": "Eeztable type property",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/UpdateElementRequest"
                    }
                ]
            },
            "TtotUpdateRequest": {
                "title": "Ttot Update Request",
                "description": "Ttot update request schema",
                "required": [
                    "id",
                    "departure_id",
                    "ttot",
                    "init",
                    "ttotable_id",
                    "ttotable_type"
                ],
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ElementIdRequest"
                    },
                    {
                        "properties": {
                            "ttot": {
                                "description": "Ttot property",
                                "type": "string",
                                "format": "date-time",
                                "example": "YYYY-MM-DD HH:MM:SS"
                            },
                            "ttotable_id": {
                                "description": "Eeztable id property",
                                "type": "integer",
                                "format": "int64"
                            },
                            "ttotable_type": {
                                "description": "Eeztable type property",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/UpdateElementRequest"
                    }
                ]
            },
            "CreateAirlineRequest": {
                "title": "Create Airline Request",
                "description": "Create airline request schema",
                "required": [
                    "name",
                    "slug",
                    "flight_number"
                ],
                "properties": {
                    "flight_number": {
                        "description": "Flight number property",
                        "type": "string"
                    },
                    "name": {
                        "description": "Name property",
                        "type": "string"
                    },
                    "slug": {
                        "description": "Slug property",
                        "type": "string"
                    },
                    "icao": {
                        "description": "Icao property",
                        "type": "string"
                    },
                    "iata": {
                        "description": "Iata property",
                        "type": "string"
                    },
                    "call_sign": {
                        "description": "Call sign property",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CreateAirportRequest": {
                "title": "Create Airport Request",
                "description": "Create airport request schema",
                "required": [
                    "name",
                    "slug"
                ],
                "properties": {
                    "name": {
                        "description": "Name property",
                        "type": "string"
                    },
                    "slug": {
                        "description": "Slug property",
                        "type": "string"
                    },
                    "location": {
                        "description": "Location property",
                        "type": "string"
                    },
                    "country": {
                        "description": "Country property",
                        "type": "string"
                    },
                    "icao": {
                        "description": "Icao property",
                        "type": "string"
                    },
                    "iata": {
                        "description": "Iata property",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CreateCountryRequest": {
                "title": "Create Country Request",
                "description": "Create country request schema",
                "required": [
                    "name",
                    "slug"
                ],
                "properties": {
                    "name": {
                        "description": "Name property",
                        "type": "string"
                    },
                    "slug": {
                        "description": "Slug property",
                        "type": "string"
                    },
                    "calling_code": {
                        "description": "Calling code property",
                        "type": "string"
                    },
                    "iso_code_two_digit": {
                        "description": "Iso code two digit property",
                        "type": "string"
                    },
                    "iso_code_three_digit": {
                        "description": "Iso code three digit property",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CreateOrganizationRequest": {
                "title": "Create Organization Request",
                "description": "Create organization request schema",
                "required": [
                    "name",
                    "slug",
                    "country_id"
                ],
                "properties": {
                    "name": {
                        "description": "Name property",
                        "type": "string"
                    },
                    "slug": {
                        "description": "Slug property",
                        "type": "string"
                    },
                    "country_id": {
                        "description": "Country id property",
                        "type": "integer",
                        "format": "int64"
                    },
                    "description": {
                        "description": "Description property",
                        "type": "string"
                    },
                    "vendors": {
                        "description": "Vendors property",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CreateVendorRequest"
                        }
                    },
                    "media": {
                        "description": "Media property",
                        "type": "array",
                        "items": {
                            "properties": {
                                "media_id": {
                                    "description": "Media id property",
                                    "type": "string",
                                    "example": "152cc099-56a2-46b6-b2a8-ebc080477e3a"
                                },
                                "pivot": {
                                    "description": "Pivot property",
                                    "properties": {
                                        "attribute": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "CreateVendorRequest": {
                "title": "Create Vendor Request",
                "description": "Create vendor request schema",
                "required": [
                    "role_id",
                    "name",
                    "slug"
                ],
                "properties": {
                    "role_id": {
                        "description": "Role id property",
                        "type": "integer",
                        "format": "int32"
                    },
                    "organization_id": {
                        "description": "Organization id property",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "description": "Name property",
                        "type": "string"
                    },
                    "slug": {
                        "description": "Slug property",
                        "type": "string"
                    },
                    "description": {
                        "description": "Slug property",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UpdateAirlineRequest": {
                "title": "Update Airline Request",
                "description": "Update airline request schema",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/IdentityAuditableRequest"
                    },
                    {
                        "required": [
                            "name",
                            "slug",
                            "flight_number"
                        ],
                        "properties": {
                            "flight_number": {
                                "description": "Flight number property",
                                "type": "string"
                            },
                            "name": {
                                "description": "Name property",
                                "type": "string"
                            },
                            "slug": {
                                "description": "Slug property",
                                "type": "string"
                            },
                            "icao": {
                                "description": "Icao property",
                                "type": "string"
                            },
                            "iata": {
                                "description": "Iata property",
                                "type": "string"
                            },
                            "call_sign": {
                                "description": "Call sign property",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "UpdateAirportRequest": {
                "title": "Update Airport Request",
                "description": "Update airport request schema",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/IdentityAuditableRequest"
                    },
                    {
                        "required": [
                            "name",
                            "slug"
                        ],
                        "properties": {
                            "name": {
                                "description": "Name property",
                                "type": "string"
                            },
                            "slug": {
                                "description": "Slug property",
                                "type": "string"
                            },
                            "location": {
                                "description": "Location property",
                                "type": "string"
                            },
                            "country": {
                                "description": "Country property",
                                "type": "string"
                            },
                            "icao": {
                                "description": "Icao property",
                                "type": "string"
                            },
                            "iata": {
                                "description": "Iata property",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "UpdateCountryRequest": {
                "title": "Update Country Request",
                "description": "Update country request schema",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/IdentityAuditableRequest"
                    },
                    {
                        "required": [
                            "id",
                            "name",
                            "slug"
                        ],
                        "properties": {
                            "name": {
                                "description": "Name property",
                                "type": "string"
                            },
                            "slug": {
                                "description": "Slug property",
                                "type": "string"
                            },
                            "calling_code": {
                                "description": "Calling code property",
                                "type": "string"
                            },
                            "iso_code_two_digit": {
                                "description": "Iso code two digit property",
                                "type": "string"
                            },
                            "iso_code_three_digit": {
                                "description": "Iso code three digit property",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "UpdateOrganizationRequest": {
                "title": "Update Organization Request",
                "description": "Update organization request schema",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/IdentityAuditableRequest"
                    },
                    {
                        "required": [
                            "name",
                            "slug",
                            "country_id"
                        ],
                        "properties": {
                            "name": {
                                "description": "Name property",
                                "type": "string"
                            },
                            "slug": {
                                "description": "Slug property",
                                "type": "string"
                            },
                            "country_id": {
                                "description": "Country id property",
                                "type": "integer",
                                "format": "int64"
                            },
                            "description": {
                                "description": "Description property",
                                "type": "string"
                            },
                            "vendors": {
                                "description": "Vendor property",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CreateVendorRequest"
                                }
                            },
                            "media": {
                                "description": "Media property",
                                "type": "array",
                                "items": {
                                    "properties": {
                                        "media_id": {
                                            "description": "Media id property",
                                            "type": "string",
                                            "example": "152cc099-56a2-46b6-b2a8-ebc080477e3a"
                                        },
                                        "pivot": {
                                            "description": "Pivot property",
                                            "properties": {
                                                "attribute": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "UpdateVendorRequest": {
                "title": "Update Vendor Request",
                "description": "Update vendor request schema",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/IdentityAuditableRequest"
                    },
                    {
                        "required": [
                            "role_id",
                            "name",
                            "slug"
                        ],
                        "properties": {
                            "role_id": {
                                "description": "Role id property",
                                "type": "integer",
                                "format": "int32"
                            },
                            "organization_id": {
                                "description": "Organization id property",
                                "type": "integer",
                                "format": "int64"
                            },
                            "name": {
                                "description": "Name property",
                                "type": "string"
                            },
                            "slug": {
                                "description": "Slug property",
                                "type": "string"
                            },
                            "description": {
                                "description": "Slug property",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "CreateProfileRequest": {
                "title": "Create Profile Request",
                "description": "Create profile request schema",
                "required": [
                    "email",
                    "password",
                    "full_name",
                    "nick_name"
                ],
                "properties": {
                    "full_name": {
                        "description": "Full name property",
                        "type": "string"
                    },
                    "nick_name": {
                        "description": "Nick name property",
                        "type": "string"
                    },
                    "country": {
                        "description": "Country property",
                        "type": "string"
                    },
                    "state": {
                        "description": "State property",
                        "type": "string"
                    },
                    "city": {
                        "description": "City property",
                        "type": "string"
                    },
                    "address": {
                        "description": "Address property",
                        "type": "string"
                    },
                    "postcode": {
                        "description": "Postcode property",
                        "type": "string"
                    },
                    "gender": {
                        "description": "Gender property",
                        "type": "string"
                    },
                    "birth_date": {
                        "description": "Birth date property",
                        "type": "string",
                        "format": "date-time",
                        "example": "YYYY-MM-DD HH:MM:SS"
                    },
                    "mobile": {
                        "description": "Mobile property",
                        "type": "string"
                    },
                    "email": {
                        "description": "Email property",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "RegisterUserRequest": {
                "title": "Register User Request",
                "description": "Register user request schema",
                "required": [
                    "email",
                    "password",
                    "full_name",
                    "nick_name"
                ],
                "properties": {
                    "email": {
                        "description": "Email property",
                        "type": "string"
                    },
                    "username": {
                        "description": "Username property",
                        "type": "string"
                    },
                    "password": {
                        "description": "Password property",
                        "type": "string"
                    },
                    "password_confirm": {
                        "description": "Password confirm property",
                        "type": "string"
                    },
                    "status": {
                        "description": "Status property",
                        "type": "string"
                    },
                    "roles": {
                        "description": "Role ids property",
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "example": [
                            1
                        ]
                    },
                    "vendors": {
                        "description": "Vendor ids property",
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "example": [
                            1
                        ]
                    },
                    "full_name": {
                        "description": "Full name property",
                        "type": "string"
                    },
                    "nick_name": {
                        "description": "Nick name property",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UpdateUserAccessRequest": {
                "title": "Update User Access Request",
                "description": "Update user access request schema",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/IdentityAuditableRequest"
                    },
                    {
                        "required": [
                            "accesses"
                        ],
                        "properties": {
                            "accesses": {
                                "description": "Accesses property",
                                "type": "array",
                                "items": {
                                    "properties": {
                                        "access_id": {
                                            "type": "integer",
                                            "format": "int64"
                                        },
                                        "pivot": {
                                            "properties": {
                                                "value": {
                                                    "example": "INHERIT | ALLOW | DENY"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "UpdateUserGroupRequest": {
                "title": "Update User Group Request",
                "description": "Update user group request schema",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/IdentityAuditableRequest"
                    },
                    {
                        "required": [
                            "groups"
                        ],
                        "properties": {
                            "groups": {
                                "description": "Group ids property",
                                "type": "array",
                                "items": {
                                    "type": "integer",
                                    "format": "int64"
                                },
                                "example": [
                                    1,
                                    2,
                                    3
                                ]
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "UpdateUserPermissionRequest": {
                "title": "Update User Permission Request",
                "description": "Update user permission request schema",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/IdentityAuditableRequest"
                    },
                    {
                        "required": [
                            "permissions"
                        ],
                        "properties": {
                            "permissions": {
                                "description": "Permissions property",
                                "type": "array",
                                "items": {
                                    "properties": {
                                        "permission_id": {
                                            "type": "integer",
                                            "format": "int64"
                                        },
                                        "pivot": {
                                            "properties": {
                                                "value": {
                                                    "example": "INHERIT | ALLOW | DENY"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "UpdateUserProfileRequest": {
                "title": "Update User Profile Request",
                "description": "Update user profile request schema",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/IdentityAuditableRequest"
                    },
                    {
                        "required": [
                            "profile"
                        ],
                        "properties": {
                            "email": {
                                "description": "Email property",
                                "type": "string"
                            },
                            "username": {
                                "description": "Username property",
                                "type": "string"
                            },
                            "password": {
                                "description": "Password property",
                                "type": "string"
                            },
                            "password_confirm": {
                                "description": "Password confirm property",
                                "type": "string"
                            },
                            "status": {
                                "description": "Status property",
                                "type": "string"
                            },
                            "profile": {
                                "$ref": "#/components/schemas/CreateProfileRequest"
                            },
                            "media": {
                                "description": "Medias property",
                                "type": "array",
                                "items": {
                                    "properties": {
                                        "media_id": {
                                            "description": "Media id property",
                                            "type": "string",
                                            "example": "152cc099-56a2-46b6-b2a8-ebc080477e3a"
                                        },
                                        "pivot": {
                                            "description": "Pivot property",
                                            "properties": {
                                                "attribute": {
                                                    "type": "string",
                                                    "example": "featured"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "roles": {
                                "description": "Role ids property",
                                "type": "array",
                                "items": {
                                    "type": "integer",
                                    "format": "int64"
                                },
                                "example": [
                                    1
                                ]
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "UpdateUserRoleRequest": {
                "title": "Update User Role Request",
                "description": "Update user role request schema",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/IdentityAuditableRequest"
                    },
                    {
                        "required": [
                            "roles"
                        ],
                        "properties": {
                            "roles": {
                                "description": "Role ids property",
                                "type": "array",
                                "items": {
                                    "type": "integer",
                                    "format": "int64"
                                },
                                "example": [
                                    1,
                                    2,
                                    3
                                ]
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "CreateAccessRequest": {
                "title": "Create Access Request",
                "description": "Create access request schema",
                "required": [
                    "name",
                    "slug"
                ],
                "properties": {
                    "name": {
                        "description": "Name property",
                        "type": "string"
                    },
                    "slug": {
                        "description": "Slug property",
                        "type": "string"
                    },
                    "description": {
                        "description": "Description property",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CreateGroupRequest": {
                "title": "Create Group Request",
                "description": "Create group request schema",
                "required": [
                    "name",
                    "slug"
                ],
                "properties": {
                    "name": {
                        "description": "Name property",
                        "type": "string"
                    },
                    "slug": {
                        "description": "Slug property",
                        "type": "string"
                    },
                    "description": {
                        "description": "Description property",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CreatePermissionRequest": {
                "title": "Create Permission Request",
                "description": "Create permission request schema",
                "required": [
                    "name",
                    "slug"
                ],
                "properties": {
                    "name": {
                        "description": "Name property",
                        "type": "string"
                    },
                    "slug": {
                        "description": "Slug property",
                        "type": "string"
                    },
                    "server": {
                        "description": "Server property",
                        "type": "string"
                    },
                    "path": {
                        "description": "Path property",
                        "type": "string"
                    },
                    "description": {
                        "description": "Description property",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CreateRoleRequest": {
                "title": "Create Role Request",
                "description": "Create role request schema",
                "required": [
                    "group_id",
                    "name",
                    "slug",
                    "description"
                ],
                "properties": {
                    "group_id": {
                        "description": "Group id property",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "description": "Name property",
                        "type": "string"
                    },
                    "slug": {
                        "description": "Slug property",
                        "type": "string"
                    },
                    "description": {
                        "description": "Description property",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UpdateAccessRequest": {
                "title": "Access Request",
                "description": "Access request schema",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/IdentityAuditableRequest"
                    },
                    {
                        "required": [
                            "id",
                            "name",
                            "slug"
                        ],
                        "properties": {
                            "name": {
                                "description": "Name property",
                                "type": "string"
                            },
                            "slug": {
                                "description": "Slug property",
                                "type": "string"
                            },
                            "description": {
                                "description": "Description property",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "UpdateGroupRequest": {
                "title": "Group Request",
                "description": "Group request schema",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/IdentityAuditableRequest"
                    },
                    {
                        "required": [
                            "id",
                            "name",
                            "slug"
                        ],
                        "properties": {
                            "name": {
                                "description": "Name property",
                                "type": "string"
                            },
                            "slug": {
                                "description": "Slug property",
                                "type": "string"
                            },
                            "description": {
                                "description": "Description property",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "UpdatePermissionAccessRequest": {
                "title": "Update Permission Access Request",
                "description": "Update permission access request schema",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/IdentityAuditableRequest"
                    },
                    {
                        "required": [
                            "accesses"
                        ],
                        "properties": {
                            "accesses": {
                                "description": "Access ids property",
                                "type": "array",
                                "items": {
                                    "type": "integer",
                                    "format": "int64"
                                },
                                "example": [
                                    1,
                                    2,
                                    3
                                ]
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "UpdatePermissionRequest": {
                "title": "Update Permission Request",
                "description": "Update permission request schema",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/IdentityAuditableRequest"
                    },
                    {
                        "required": [
                            "id",
                            "name",
                            "slug"
                        ],
                        "properties": {
                            "name": {
                                "description": "Name property",
                                "type": "string"
                            },
                            "slug": {
                                "description": "Slug property",
                                "type": "string"
                            },
                            "server": {
                                "description": "Server property",
                                "type": "string"
                            },
                            "path": {
                                "description": "Path property",
                                "type": "string"
                            },
                            "description": {
                                "description": "Description property",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "UpdateRolePermissionRequest": {
                "title": "Update Role Permission Request",
                "description": "Update role permission request schema",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/IdentityAuditableRequest"
                    },
                    {
                        "required": [
                            "accesses"
                        ],
                        "properties": {
                            "permissions": {
                                "description": "Permission ids property",
                                "type": "array",
                                "items": {
                                    "type": "integer",
                                    "format": "int64"
                                },
                                "example": [
                                    1,
                                    2,
                                    3
                                ]
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "UpdateRoleRequest": {
                "title": "Update Role Request",
                "description": "Update role request schema",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/IdentityAuditableRequest"
                    },
                    {
                        "required": [
                            "id",
                            "group_id",
                            "name",
                            "slug"
                        ],
                        "properties": {
                            "group_id": {
                                "description": "Group id property",
                                "type": "integer",
                                "format": "int64"
                            },
                            "name": {
                                "description": "Name property",
                                "type": "string"
                            },
                            "slug": {
                                "description": "Slug property",
                                "type": "string"
                            },
                            "description": {
                                "description": "Description property",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                ]
            }
        },
        "parameters": {
            "timezone": {
                "name": "timezone",
                "in": "header",
                "description": "timezone parameter",
                "required": false,
                "schema": {
                    "type": "string",
                    "default": "UTC",
                    "enum": [
                        "Asia/Qatar",
                        "UTC"
                    ]
                }
            }
        },
        "securitySchemes": {
            "apiKey": {
                "type": "apiKey",
                "name": "Authorization",
                "in": "header"
            }
        }
    }
}